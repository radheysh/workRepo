{"version":3,"sources":["components/TableStyle/customStyles.js","assets/images/SortIcon.svg","views/user/UploadList/UploadFileModal.jsx","views/user/UploadList/FilterModal.jsx","views/user/UploadList/UploadList.jsx"],"names":["customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","fontSize","fontFamily","opacity","display","justifyContent","headRow","borderTopWidth","borderTopColor","borderTopStyle","cells","_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSortIcon","_ref","svgRef","title","titleId","props","viewBox","xmlns","ref","id","d","ForwardRef","UploadFileModal","dispatch","useDispatch","isLoading","useSelector","state","dashboard","toggleAddData","setToggleAddData","getData","useState","fileSizeError","setFileSizeError","fileRef","React","createRef","fileSelectHandler","ele","fileUploaded","files","fileUploadedSize","size","isValidFile","type","file","FormData","append","setAlertData","isOpen","message","uploadFileData","toggle","prev","className","onDrop","acceptedFiles","getRootProps","getInputProps","color","onClick","current","click","accept","onChange","href","FilterModal","filterData","setFilterData","resetFilterValues","setConvertedFilterData","inputData","setInputData","useEffect","date","Date","currentDate","toISOString","split","handleChange","e","days","name","value","includes","uploadedDate","setDate","getDate","Number","htmlFor","uploadedTo","uploadedFrom","disabled","md","processingStatus","objData","forEach","convertFilterData","entries","map","outline","Status","status","tooltipOpen","setTooltipOpen","placement","UploadList","alertData","toggleUploadData","setToggleUploadData","totalRows","setTotalRows","perPage","setPerPage","toggleFilterData","setToggleFilterData","featureIds","auth","Currentuser","FeatureIds","uploadData","stopLoading","setStopLoading","currPage","setCurrPage","convertedFilterData","filterDisplayData","setFilterDisplayData","searchInput","setSearchInput","attibName","sortType","sortKey","setSortKey","columns","selector","row","srn","width","sortServer","sortable","fileName","uploadedAt","noofrecords","data","setData","page","getUploadData","pageNumber","filters","filter","index","self","findIndex","t","searchResult","item","idx","errorDetails","ledgerSyncStatus","inputFileName","noOfRecord","moment","utc","updatedDate","format","totalCount","handlePerRowsChange","newPerPage","nameConverter","result","replace","charAt","toUpperCase","slice","searchTimeout","setTimeout","clearTimeout","to","placeholder","sm","pagination","paginationServer","paginationRowsPerPageOptions","paginationTotalRows","onChangePage","onChangeRowsPerPage","noDataComponent","sortIcon","SortIcon","onSort","selectedColumn","sortDirection","NotificationAlert","delay"],"mappings":"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","file":"static/js/10.ec9a45f3.chunk.js","sourcesContent":["const customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '50px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '8px', // override the cell padding for head cells\r\n      paddingRight: '8px',\r\n      fontSize: '17px',\r\n      fontFamily: 'SourceSansProSemiBold',\r\n      opacity: '0.8',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  },\r\n  headRow: {\r\n    style: {\r\n      borderTopWidth: '1px',\r\n      borderTopColor: 'rgba(0,0,0,.12)',\r\n      borderTopStyle: 'solid',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '8px', // override the cell padding for data cells\r\n      paddingRight: '8px',\r\n      fontSize: '16px',\r\n    },\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { customStyles };\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSortIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160zm416 0H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSortIcon);\nexport default __webpack_public_path__ + \"static/media/SortIcon.b327758b.svg\";\nexport { ForwardRef as ReactComponent };","import { useDispatch, useSelector } from 'react-redux';\r\nimport React, { useState } from 'react';\r\nimport { Button } from 'reactstrap';\r\nimport Dropzone from 'react-dropzone';\r\n\r\nimport { CustomModal } from '../../../components';\r\nimport { setAlertData, uploadFileData } from '../../../store/actions';\r\n\r\nconst UploadFileModal = props => {\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(state => state.dashboard);\r\n  const { toggleAddData, setToggleAddData, getData } = props;\r\n  const [fileSizeError, setFileSizeError] = useState(false);\r\n  const fileRef = React.createRef();\r\n\r\n  const triggerClick = () => {\r\n    fileRef.current.click();\r\n  };\r\n\r\n  const fileSelectHandler = ele => {\r\n    const supportedFileFormat = [\r\n      'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet',\r\n      'application/vnd.ms-excel',\r\n      'text/csv',\r\n    ];\r\n    const fileUploaded = ele?.target?.files[0] || ele[0];\r\n    const fileUploadedSize = ele.target?.files[0].size || ele[0].size;\r\n    const isValidFile = supportedFileFormat.indexOf(fileUploaded.type);\r\n    const file = new FormData();\r\n    file.append('file', fileUploaded);\r\n    if (fileUploadedSize > 10485760) {\r\n      setFileSizeError(true);\r\n      dispatch(\r\n        setAlertData({\r\n          isOpen: true,\r\n          message: 'File Upload Max Size Limit Exceeded.',\r\n          type: 'error',\r\n        }),\r\n      );\r\n    } else if (isValidFile === -1) {\r\n      setFileSizeError(true);\r\n      dispatch(\r\n        setAlertData({\r\n          isOpen: true,\r\n          message: 'File Format Not Supported.',\r\n          type: 'error',\r\n        }),\r\n      );\r\n    } else {\r\n      setFileSizeError(false);\r\n      dispatch(uploadFileData({ file, setToggleAddData, getData }));\r\n    }\r\n  };\r\n  return (\r\n    <CustomModal\r\n      title=\"Upload File\"\r\n      isOpen={toggleAddData}\r\n      toggle={() => setToggleAddData(prev => !prev)}\r\n      className=\"create-edit-item\"\r\n    >\r\n      <div className=\"upload_container\">\r\n        <div className=\"upload_box\">\r\n          <Dropzone onDrop={acceptedFiles => fileSelectHandler(acceptedFiles)}>\r\n            {({ getRootProps, getInputProps }) => (\r\n              <section>\r\n                <div {...getRootProps()}>\r\n                  <p className=\"f28 pointer\">\r\n                    <i className=\"fa-solid fa-arrow-up-from-bracket\" />\r\n                  </p>\r\n                  <input {...getInputProps()} />\r\n                  <p>Drag &amp; Drop your file here</p>\r\n                </div>\r\n              </section>\r\n            )}\r\n          </Dropzone>\r\n          <p className=\"sm_label\">OR</p>\r\n          <div>\r\n            <Button color=\"danger\" onClick={() => triggerClick()}>\r\n              {isLoading ? <i className=\"fa-solid fa-circle-notch fa-spin\" /> : 'Browse File'}\r\n            </Button>\r\n            <input\r\n              type=\"file\"\r\n              accept=\".csv, .xlsx, .xlsm, .xlsb, .xls\"\r\n              onChange={fileSelectHandler}\r\n              ref={fileRef}\r\n            />\r\n          </div>\r\n        </div>\r\n        <p className={fileSizeError ? 'disclaimer error' : 'disclaimer'}>\r\n          Supported file extension : <strong>.xlsx</strong>\r\n        </p>\r\n        <p className={fileSizeError ? 'disclaimer error' : 'disclaimer'}>\r\n          Maximum size allowed : <strong>10 MB</strong>\r\n        </p>\r\n        <p className={fileSizeError ? 'disclaimer error' : 'disclaimer'}>\r\n          Compatible Sheet :{' '}\r\n          <strong>\r\n            <a href=\"http://52.52.23.162/Reference.xlsx\">Reference.xlsx</a>\r\n          </strong>\r\n        </p>\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default UploadFileModal;\r\n","import { useEffect, useState } from 'react';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport { CustomModal } from '../../../components';\r\n\r\nconst FilterModal = ({\r\n  isOpen,\r\n  toggle,\r\n  filterData,\r\n  setFilterData,\r\n  resetFilterValues,\r\n  setConvertedFilterData,\r\n}) => {\r\n  const [inputData, setInputData] = useState({});\r\n\r\n  useEffect(() => {\r\n    setInputData({ ...filterData });\r\n  }, [filterData]);\r\n\r\n  const date = new Date();\r\n  const currentDate = new Date().toISOString().split('T')[0];\r\n  const fromDate = days =>\r\n    new Date(date.setDate(date.getDate() - Number(days))).toISOString().split('T')[0];\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n    setInputData({\r\n      ...inputData,\r\n      [name]: value,\r\n      // set date field's value on changes based on days and date picker\r\n      ...(['uploadedFrom', 'uploadedTo'].includes(name) && { uploadedDate: '' }),\r\n      ...(name === 'uploadedDate' && {\r\n        [name]: value,\r\n        uploadedFrom: value === '' ? value : fromDate(value),\r\n        uploadedTo: value === '' ? value : currentDate,\r\n      }),\r\n    });\r\n  };\r\n  const handleSubmit = () => {\r\n    if (inputData.uploadedTo !== '' && inputData.uploadedFrom === '') {\r\n      inputData.uploadedFrom = inputData.uploadedTo;\r\n    }\r\n    if (inputData.uploadedTo === '' && inputData.uploadedFrom !== '') {\r\n      inputData.uploadedTo = currentDate;\r\n    }\r\n    setFilterData(inputData);\r\n\r\n    const objData = { ...inputData };\r\n\r\n    // Remove empty attribute from object\r\n    Object.keys(objData).forEach(key => {\r\n      if (objData[key] === '') {\r\n        delete objData[key];\r\n      }\r\n    });\r\n    delete objData.uploadedDate;\r\n\r\n    // Restructure data for api call\r\n    const convertFilterData = Object.entries(objData).map(([key, value]) => ({\r\n      name: key,\r\n      value,\r\n      ...(['uploadedFrom', 'uploadedTo'].includes(key) && {\r\n        name: 'updatedDate',\r\n        value,\r\n        type: key === 'uploadedTo' ? 'END_DATE' : 'START_DATE',\r\n      }),\r\n    }));\r\n    setConvertedFilterData(convertFilterData);\r\n    toggle(false);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setInputData({\r\n      processingStatus: '',\r\n      uploadedDate: '',\r\n      uploadedFrom: '',\r\n      uploadedTo: '',\r\n    });\r\n    resetFilterValues();\r\n  };\r\n  return (\r\n    <CustomModal isOpen={isOpen} toggle={() => toggle(prev => !prev)} title=\"Filter By\">\r\n      <div className=\"p-2 pt-0 filter\">\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            <label htmlFor=\"uploadedDate\" className=\"form-label\">\r\n              Uploaded Date\r\n            </label>\r\n            <select\r\n              name=\"uploadedDate\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.uploadedDate}\r\n            >\r\n              <option value=\"\">Anytime</option>\r\n              <option value=\"10\">Last 10 Days</option>\r\n              <option value=\"20\">Last 20 Days</option>\r\n              <option value=\"30\">Last 30 Days</option>\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"uploadedFrom\" className=\"form-label\">\r\n              From\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"uploadedFrom\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.uploadedTo !== '' && inputData.uploadedFrom === ''\r\n                  ? inputData.uploadedTo\r\n                  : inputData.uploadedFrom\r\n              }\r\n              disabled={inputData.uploadedDate}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"uploadedTo\" className=\"form-label\">\r\n              To\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"uploadedTo\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.uploadedTo === '' && inputData.uploadedFrom !== ''\r\n                  ? currentDate\r\n                  : inputData.uploadedTo\r\n              }\r\n              disabled={inputData.uploadedDate}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col md={6}>\r\n            <label htmlFor=\"processingStatus\" className=\"form-label\">\r\n              Status\r\n            </label>\r\n            <select\r\n              name=\"processingStatus\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.processingStatus}\r\n            >\r\n              <option>No Status</option>\r\n              <option value=\"RECEIVED\">RECEIVED</option>\r\n              <option value=\"PROCCESSED\">PROCCESSED</option>\r\n              <option value=\"ERRONEOUS\">INVALID FILE</option>\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col md={5}>\r\n            <Button color=\"danger\" className=\"w-100\" onClick={handleSubmit}>\r\n              Apply\r\n            </Button>\r\n          </Col>\r\n          <Col md={5}>\r\n            <Button\r\n              outline\r\n              color=\"secondary\"\r\n              className=\"w-100 text-semi-bold\"\r\n              onClick={resetFilter}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default FilterModal;\r\n","import { Button, ButtonGroup, Col, Row, Spinner, Tooltip } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport DataTable from 'react-data-table-component';\r\nimport { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\nimport { customStyles } from '../../../components/TableStyle/customStyles';\r\nimport { getUploadData } from '../../../store/actions';\r\nimport UploadFileModal from './UploadFileModal';\r\nimport FilterModal from './FilterModal';\r\nimport { ReactComponent as SortIcon } from '../../../assets/images/SortIcon.svg';\r\nimport './UploadList.css';\r\nimport NotificationAlert from '../../../components/UI/NotificationAlert/NotificationAlert';\r\n\r\nfunction Status({\r\n  status,\r\n  message,\r\n  // ledgerSyncStatus,\r\n  id,\r\n}) {\r\n  const [tooltipOpen, setTooltipOpen] = useState(false);\r\n  return status === 'PROCCESSED' ? (\r\n    <>\r\n      <span className=\"sucess\">\r\n        {status}\r\n        {/* {ledgerSyncStatus === 'No' && <i className=\"fa-solid fa-rotate\" />} */}\r\n      </span>\r\n    </>\r\n  ) : (\r\n    <>\r\n      <span className=\"fail\" id={`Tooltip${id}`}>\r\n        {/* {status} */}\r\n        INVALID FILE\r\n      </span>\r\n      <Tooltip\r\n        placement=\"top\"\r\n        isOpen={tooltipOpen}\r\n        target={`Tooltip${id}`}\r\n        toggle={() => setTooltipOpen(!tooltipOpen)}\r\n      >\r\n        {message}\r\n      </Tooltip>\r\n    </>\r\n  );\r\n}\r\n\r\nconst UploadList = () => {\r\n  const dispatch = useDispatch();\r\n  const { alertData } = useSelector(state => state.dashboard);\r\n  const [toggleUploadData, setToggleUploadData] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [toggleFilterData, setToggleFilterData] = useState(false);\r\n  const [filterData, setFilterData] = useState({\r\n    uploadedDate: '',\r\n    uploadedFrom: '',\r\n    uploadedTo: '',\r\n    processingStatus: '',\r\n  });\r\n  const featureIds = useSelector(state => state.auth.Currentuser?.featureIds);\r\n  const FeatureIds = featureIds?.split('~');\r\n  const { isLoading, uploadData } = useSelector(state => state.dashboard);\r\n  const [stopLoading, setStopLoading] = useState(false);\r\n  const [currPage, setCurrPage] = useState(0);\r\n  const [convertedFilterData, setConvertedFilterData] = useState([]);\r\n  const [filterDisplayData, setFilterDisplayData] = useState([]);\r\n  const [searchInput, setSearchInput] = useState({});\r\n  const [sortKey, setSortKey] = useState({\r\n    attibName: 'updatedDate',\r\n    sortType: 'desc',\r\n  });\r\n\r\n  const [data, setData] = useState({\r\n    columns: [\r\n      {\r\n        name: 'No.',\r\n        selector: row => row.srn,\r\n        width: '5%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'inputFileName',\r\n        name: 'File Name',\r\n        selector: row => row.fileName,\r\n        width: '45%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'updatedDate',\r\n        name: 'Uploaded On',\r\n        selector: row => row.uploadedAt,\r\n        width: '20%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'noOfRecord',\r\n        name: 'No. of Shipments',\r\n        selector: row => row.noofrecords,\r\n        width: '15%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'processingStatus',\r\n        name: 'Status',\r\n        selector: row => row.status,\r\n        width: '15%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n\r\n  const updateTableData = () => {\r\n    setData({\r\n      ...data,\r\n      rows: uploadData?.searchResult.map((item, idx) => ({\r\n        ...item,\r\n        srn: idx + 1 + currPage * perPage,\r\n        status: (\r\n          <Status\r\n            status={item?.processingStatus}\r\n            message={item?.errorDetails}\r\n            id={idx}\r\n            ledgerSyncStatus={item?.ledgerSyncStatus}\r\n          />\r\n        ),\r\n        fileName: item?.inputFileName,\r\n        noofrecords: item?.noOfRecord || 'N.A',\r\n        uploadedAt: moment.utc(item.updatedDate).format('MM/DD/YYYY, HH:mm UTC'),\r\n      })),\r\n    });\r\n  };\r\n\r\n  const getData = page => {\r\n    dispatch(\r\n      getUploadData({\r\n        pageNumber: page,\r\n        perPage,\r\n        ...(convertedFilterData.length && { filters: convertedFilterData }),\r\n        sortKey: { ...sortKey },\r\n      }),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(0);\r\n    if (convertedFilterData)\r\n      setFilterDisplayData([\r\n        ...convertedFilterData.filter(\r\n          (value, index, self) => index === self.findIndex(t => t.name === value.name),\r\n        ),\r\n      ]);\r\n  }, [convertedFilterData, sortKey, perPage]);\r\n\r\n  useEffect(() => {\r\n    updateTableData();\r\n    if (uploadData?.searchResult) {\r\n      setStopLoading(true);\r\n    }\r\n    setTotalRows(uploadData?.totalCount);\r\n  }, [uploadData]);\r\n\r\n  const handlePageChange = page => {\r\n    setCurrPage(page - 1);\r\n    getData(page - 1);\r\n  };\r\n\r\n  const handlePerRowsChange = async newPerPage => {\r\n    setPerPage(newPerPage);\r\n  };\r\n  const resetFilterValues = () => {\r\n    setFilterData({\r\n      uploadedDate: '',\r\n      uploadedFrom: '',\r\n      uploadedTo: '',\r\n      processingStatus: '',\r\n    });\r\n    setConvertedFilterData([]);\r\n    setToggleFilterData(false);\r\n  };\r\n\r\n  const nameConverter = name => {\r\n    const result = name.replace(/([A-Z])/g, ' $1');\r\n    return result.charAt(0).toUpperCase() + result.slice(1);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const searchTimeout = setTimeout(() => {\r\n      if (Object.keys(searchInput).length > 0) {\r\n        dispatch(\r\n          getUploadData({\r\n            pageNumber: 0,\r\n            perPage,\r\n            filters: [searchInput],\r\n            sortKey: { ...sortKey },\r\n          }),\r\n        );\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(searchTimeout);\r\n  }, [searchInput]);\r\n\r\n  const handleSearch = e => {\r\n    setSearchInput({\r\n      name: 'inputFileName',\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Link to=\"/dashboard\" className=\"header_nav\">\r\n          <h4 className=\"text-bold\">\r\n            <i className=\"fa-solid fa-angle-left\" />\r\n            File Upload Logs\r\n          </h4>\r\n        </Link>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col>\r\n          {FeatureIds?.includes('FT_ID_11') && (\r\n            <Button className=\"mr8\" color=\"danger\" onClick={() => setToggleFilterData(true)}>\r\n              <i className=\"fas fa-filter\" /> <span className=\"mx-1\">Filter</span>\r\n            </Button>\r\n          )}\r\n          {filterDisplayData?.map(({ name, value }) => (\r\n            <Button\r\n              className=\"filter_btn\"\r\n              onClick={() => {\r\n                setConvertedFilterData(\r\n                  convertedFilterData.filter(item => item.name !== name && name),\r\n                );\r\n                setFilterData({\r\n                  ...filterData,\r\n                  [name]: '',\r\n                  ...(name === 'updatedDate' && {\r\n                    uploadedDate: '',\r\n                    uploadedFrom: '',\r\n                    uploadedTo: '',\r\n                  }),\r\n                });\r\n              }}\r\n            >\r\n              <span>\r\n                {name === 'updatedDate'\r\n                  ? nameConverter(name)\r\n                  : value === 'ERRONEOUS'\r\n                  ? 'INVALID FILE'\r\n                  : value}\r\n              </span>\r\n              <i className=\"fa-solid fa-xmark\" />\r\n            </Button>\r\n          ))}\r\n        </Col>\r\n        <Col className=\"text-end btn-search-section\">\r\n          {FeatureIds?.includes('FT_ID_12') && (\r\n            <ButtonGroup className=\"upload_btn\" onClick={() => setToggleUploadData(true)}>\r\n              <Button outline>\r\n                <i className=\"far fa-plus f-24\" />\r\n              </Button>\r\n              <Button outline className=\"text-semi-bold\">\r\n                Upload File\r\n              </Button>\r\n            </ButtonGroup>\r\n          )}\r\n\r\n          <div className=\"form-group has-search\">\r\n            <span className=\"fa fa-search form-control-feedback\" />\r\n            <input\r\n              onChange={handleSearch}\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search for File Name\"\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col sm={12} className=\"position-relative list-data-table\">\r\n          {isLoading && !stopLoading && <Spinner className=\"spinner\" type=\"border\" color=\"dark\" />}\r\n          {!data.rows && stopLoading ? (\r\n            <p className=\"no_content\">No result found</p>\r\n          ) : (\r\n            <DataTable\r\n              columns={data.columns}\r\n              data={data.rows}\r\n              customStyles={customStyles}\r\n              pagination\r\n              paginationServer\r\n              paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n              paginationTotalRows={totalRows}\r\n              onChangePage={handlePageChange}\r\n              onChangeRowsPerPage={handlePerRowsChange}\r\n              noDataComponent={!isLoading && stopLoading && 'No data found'}\r\n              sortIcon={<SortIcon />}\r\n              sortServer\r\n              onSort={(selectedColumn, sortDirection) => {\r\n                setSortKey({\r\n                  attibName: selectedColumn.id,\r\n                  sortType: sortDirection,\r\n                });\r\n              }}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <FilterModal\r\n        isOpen={toggleFilterData}\r\n        toggle={setToggleFilterData}\r\n        setFilterData={setFilterData}\r\n        filterData={filterData}\r\n        resetFilterValues={resetFilterValues}\r\n        setConvertedFilterData={setConvertedFilterData}\r\n      />\r\n      <UploadFileModal\r\n        toggleAddData={toggleUploadData}\r\n        setToggleAddData={setToggleUploadData}\r\n        getData={getData}\r\n      />\r\n      {alertData?.isOpen && (\r\n        <NotificationAlert delay=\"5000\" type={alertData?.type} message={alertData?.message} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UploadList;\r\n"],"sourceRoot":""}