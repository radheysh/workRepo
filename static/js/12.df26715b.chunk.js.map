{"version":3,"sources":["components/TableStyle/customStyles.js","components/UI/Modal/ConfirmModal.jsx","views/user/AccessManagement/Features.js","views/user/AccessManagement/SwitchGroupModal.js","views/user/AccessManagement/Groups.js","views/user/AccessManagement/AddUserModal.js","views/user/AccessManagement/Users.js","views/user/AccessManagement/AccessManagement.jsx"],"names":["customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","fontSize","fontFamily","opacity","display","justifyContent","headRow","borderTopWidth","borderTopColor","borderTopStyle","cells","ConfirmModal","isOpen","title","question","toggle","handleSubmit","isLoading","useSelector","state","dashboard","useEffect","document","body","overflow","scrollable","className","type","onClick","src","CLOSE_ICON","alt","color","Features","redirecttoGrp","dispatch","useDispatch","accessReducers","featureList","ModiFygroup","modifyrow","isCreating","useState","CompanyData","setCompanyData","shipper","temp","elem","push","value","label","Shipper","setShipper","Shippererror","setShippererror","SelectedRow","setSelectedRow","SelectedIndex","setSelectedIndex","getUserGroupAndCompany","axiosMain","get","companyRes","data","response","length","getFeatureStart","removeModifyGroup","handleChangerow","selectedRows","filter","srn","toString","columns","name","selector","row","index","index2","no","width","id","feature","sortServer","cell","sortable","featureDescription","setData","dataField","text","formatter","handleSuccess","toast","success","error","setTimeout","viewrow","adminrow","writerow","writeno","viewno","adminno","i","featureText","featureId","temprow","featureidarr","featureID","split","indexarr","forEach","includes","rowSelectCritera","selectRow","mode","clickToSelect","selected","onSelect","isSelect","x","onSelectAll","ids","r","selectColumnStyle","checked","disabled","rowIndex","rowKey","createInitialValue","groupname","grpName","desc","groupDescription","validationSchema","Yup","shape","notRequired","required","initialValues","enableReinitialize","onSubmit","values","resetForm","featureidstr","preselectedrow","shipperstr","createGroupStart","undefined","groupName","substring","featureIds","onCreateGroup","errors","handleChange","touched","setFieldValue","Spinner","for","onChange","e","invalid","placeholder","isMulti","options","classNamePrefix","tag","keyField","bordered","selectableRowsComponent","Checkbox","selectableRows","onSelectedRowsChange","React","memo","forwardRef","ref","rest","backgroundColor","SwitchGroupModal","props","toggleAddData","setToggleAddData","userdata","auth","Currentuser","history","useHistory","groupData","setGroupData","GroupRes","temparr","group","loggedInGroup","localStorage","setItem","originalGroup","getUserSuccess","valuesUser","targetGroup","uuid","SwitchGroupStart","handleSubmitData","whiteSpace","sm","map","Groups","setactiveTab","totalRows","setTotalRows","perPage","setPerPage","switchGroupModal","setSwitchGroupModal","FeatureIds","open","delete","ConfirmationModal","setConfirmationModal","currPage","setCurrentPage","SRno","setSRno","del","post","getUserGroupStart","ActionFormatter","userattached","srno","createdby","createdAt","Tabledata","setTableData","AllGroups","searchResult","createdBy","moment","format","updatedAt","noOfUserAttached","totalCount","handlePerRowsChange","newPerPage","fontWeight","paginationTotalRows","pagination","paginationServer","paginationRowsPerPageOptions","paginationDefaultPage","onChangePage","page","onChangeRowsPerPage","paginationPerPage","setModifyGroup","AddUserModal","isEdit","username","emailId","email","getAllUsersStart","company","createUserStart","Users","EditUserModal","setEditUserModal","deleteUser","userUUID","responseCode","edit","addUserModal","setAddUserModal","updatedBy","AllUsers","AccessManagement","activeTab","Navigate","useLocation","search","pushState","tab","outline"],"mappings":"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","file":"static/js/12.df26715b.chunk.js","sourcesContent":["const customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '50px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '8px', // override the cell padding for head cells\r\n      paddingRight: '8px',\r\n      fontSize: '17px',\r\n      fontFamily: 'SourceSansProSemiBold',\r\n      opacity: '0.8',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  },\r\n  headRow: {\r\n    style: {\r\n      borderTopWidth: '1px',\r\n      borderTopColor: 'rgba(0,0,0,.12)',\r\n      borderTopStyle: 'solid',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '8px', // override the cell padding for data cells\r\n      paddingRight: '8px',\r\n      fontSize: '16px',\r\n    },\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { customStyles };\r\n","import { Button, Container, Modal } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { CLOSE_ICON } from '../../../assets/images';\r\nimport './modal.css';\r\n\r\nfunction ConfirmModal({ isOpen, title, question, toggle, handleSubmit }) {\r\n  const { isLoading } = useSelector(state => state.dashboard);\r\n  useEffect(() => {\r\n    if (isOpen) document.body.style.overflow = 'hidden';\r\n    else document.body.style.overflow = 'visible';\r\n  }, [isOpen]);\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} scrollable className=\"modal-dialog-centered confirm-modal\">\r\n        <Container className=\"px-3\">\r\n          <div className=\"modal-header h4 pb-0 pt-2 border-0\">\r\n            <span className=\"modal-title\">{title}</span>\r\n            <button type=\"button\" className=\"text-button\" onClick={toggle}>\r\n              <img src={CLOSE_ICON} alt=\"\" />\r\n            </button>\r\n          </div>\r\n        </Container>\r\n        <hr />\r\n        <Container className=\"modal-container\">\r\n          <div className=\"modal-body px-4 py-2\">\r\n            <div className=\"p-2\">\r\n              <div className=\"p-2 text-center\">\r\n                <div className=\"text-semi-bold f-20\">{question}</div>\r\n                <div className=\"d-flex justify-content-between mx-auto w-78\">\r\n                  <Button color=\"secondary\" className=\"px-5 mt-4\" onClick={toggle}>\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    color=\"danger\"\r\n                    className=\"px-5 mt-4\"\r\n                    onClick={() => {\r\n                      handleSubmit();\r\n                    }}\r\n                  >\r\n                    {isLoading ? <i className=\"fa-solid fa-circle-notch fa-spin\" /> : 'Yes'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","/* eslint-disable no-else-return */\r\n/* eslint-disable no-case-declarations */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-use-before-define */\r\n/* eslint-disable arrow-body-style */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable no-lonely-if */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable array-callback-return */\r\n/* eslint-disable max-len */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-syntax */\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport DataTable from 'react-data-table-component';\r\nimport { Form, Formik } from 'formik';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Select from 'react-select';\r\nimport toast from 'react-hot-toast';\r\nimport { Button, FormFeedback, FormGroup, Input, Label, Spinner } from 'reactstrap';\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { getFeatureStart, createGroupStart, removeModifyGroup } from '../../../store/actions';\r\nimport SpinnerBlue from '../../../components/UI/Spinner/Spinner';\r\nimport { customStyles } from '../../../components/TableStyle/customStyles';\r\nimport axiosMain from '../../../http/axios/axios_main';\r\n\r\nconst Features = ({ redirecttoGrp }) => {\r\n  const dispatch = useDispatch();\r\n  const { featureList, ModiFygroup, isLoading, modifyrow, isCreating } = useSelector(\r\n    state => state.accessReducers,\r\n  );\r\n  const [CompanyData, setCompanyData] = useState([]);\r\n  const [Shipper, setShipper] = useState(() => {\r\n    if (modifyrow?.shipper) {\r\n      const temp = [];\r\n      for (const elem of modifyrow?.shipper) {\r\n        temp.push({\r\n          value: elem,\r\n          label: elem,\r\n        });\r\n      }\r\n      return temp;\r\n    } else {\r\n      return [];\r\n    }\r\n  });\r\n  const [Shippererror, setShippererror] = useState(false);\r\n  const [SelectedRow, setSelectedRow] = useState([]);\r\n  const [SelectedIndex, setSelectedIndex] = useState([]);\r\n\r\n  const getUserGroupAndCompany = async () => {\r\n    const companyRes = await axiosMain.get('/v1/webapp/getShippers');\r\n    const temp = [];\r\n    for (const elem of companyRes?.data?.response) {\r\n      temp.push({\r\n        value: elem,\r\n        label: elem,\r\n      });\r\n    }\r\n    setCompanyData(temp);\r\n  };\r\n  useEffect(() => {\r\n    if (!featureList.length) {\r\n      dispatch(getFeatureStart());\r\n    }\r\n    getUserGroupAndCompany();\r\n    return () => {\r\n      dispatch(removeModifyGroup());\r\n    };\r\n  }, []);\r\n  const handleChangerow = ({ selectedRows }) => {\r\n    setSelectedRow(selectedRows.filter(elem => elem?.srn?.toString()));\r\n  };\r\n  const [data, setData] = useState({\r\n    columns: [\r\n      {\r\n        name: '#',\r\n        selector: (row, index, index2) => row.no,\r\n        width: '10%',\r\n      },\r\n      {\r\n        id: 'feature',\r\n        name: 'Feature',\r\n        selector: row => row.feature,\r\n        width: '35%',\r\n        sortServer: true,\r\n        cell: row =>\r\n          row.srn.toString() ? row.feature : <h1 className=\"rowHeading\">{row.feature}</h1>,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'featureDescription',\r\n        name: 'Feature Description',\r\n        selector: row => row.featureDescription,\r\n        width: '45%',\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n  const columns = [\r\n    {\r\n      dataField: 'no',\r\n      text: '#',\r\n    },\r\n    {\r\n      dataField: 'feature',\r\n      text: 'Feature',\r\n      formatter: (cell, row) => {\r\n        if (row.srn.toString()) {\r\n          return row.feature;\r\n        } else {\r\n          return <h1 className=\"rowHeading\">{row.feature}</h1>;\r\n        }\r\n      },\r\n    },\r\n    {\r\n      dataField: 'featureDescription',\r\n      text: 'Feature Description',\r\n    },\r\n  ];\r\n  const handleSuccess = type => {\r\n    if (ModiFygroup) {\r\n      if (type === 'success') {\r\n        toast.success('Updated Group Successfully');\r\n      } else {\r\n        toast.error('Group name Already Exist!');\r\n      }\r\n      setTimeout(() => {\r\n        redirecttoGrp();\r\n      }, 2000);\r\n    } else {\r\n      if (type === 'success') {\r\n        toast.success(' Group Created Successfully');\r\n      } else {\r\n        toast.error('Group name Already Exist!');\r\n      }\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (featureList?.length) {\r\n      const viewrow = [];\r\n      const adminrow = [];\r\n      const writerow = [];\r\n      let writeno = 8;\r\n      let viewno = 0;\r\n      let adminno = 12;\r\n      for (const i of featureList) {\r\n        switch (i.type) {\r\n          case 'Admin Access':\r\n            adminrow.push({\r\n              srn: i.id,\r\n              no: adminno + 1,\r\n              feature: i.featureText,\r\n              id: i.featureId,\r\n              featureDescription: i.featureDescription,\r\n              type: i.type,\r\n            });\r\n            adminno++;\r\n            break;\r\n          case 'View Access':\r\n            viewrow.push({\r\n              srn: i.id,\r\n              feature: i.featureText,\r\n              no: viewno + 1,\r\n              id: i.featureId,\r\n              featureDescription: i.featureDescription,\r\n              type: i.type,\r\n            });\r\n            viewno++;\r\n\r\n            break;\r\n          case 'Write Access':\r\n            writerow.push({\r\n              srn: i.id,\r\n              feature: i.featureText,\r\n              id: i.featureId,\r\n              no: writeno + 1,\r\n              featureDescription: i.featureDescription,\r\n              type: i.type,\r\n            });\r\n            writeno++;\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n      const temprow = [\r\n        {\r\n          srn: '',\r\n          feature: 'View Access',\r\n          id: 'view_access',\r\n          featureDescription: '',\r\n        },\r\n        ...viewrow,\r\n        {\r\n          srn: '',\r\n          feature: 'Write Access',\r\n          id: 'write_access',\r\n          featureDescription: '',\r\n        },\r\n        ...writerow,\r\n        {\r\n          srn: '',\r\n          feature: 'Admin Access',\r\n          id: 'admin_access',\r\n          featureDescription: '',\r\n        },\r\n        ...adminrow,\r\n      ];\r\n      setData({ ...data, rows: temprow });\r\n    }\r\n  }, [featureList, ModiFygroup]);\r\n  const handleSubmit = (values, resetForm) => {\r\n    if (!ModiFygroup && !SelectedRow.length) {\r\n      return toast.error('please select the group feature. ');\r\n    }\r\n    if (!Shipper.length) {\r\n      return setShippererror(true);\r\n    }\r\n    let featureidstr = '';\r\n    if (ModiFygroup) {\r\n      const preselectedrow = [];\r\n      for (const i of data?.rows) {\r\n        if (SelectedIndex.includes(i.srn)) {\r\n          preselectedrow.push({\r\n            srn: i.srn,\r\n            feature: i.feature,\r\n            id: i.id,\r\n            featureDescription: i.featureDescription,\r\n          });\r\n        }\r\n      }\r\n      for (const elem of preselectedrow) {\r\n        featureidstr = `${featureidstr}~${elem.id}`;\r\n      }\r\n    } else {\r\n      for (const elem of SelectedRow) {\r\n        featureidstr = `${featureidstr}~${elem.id}`;\r\n      }\r\n    }\r\n    let shipperstr = '';\r\n    for (const elem of Shipper) {\r\n      shipperstr = `${shipperstr}~${elem.value}`;\r\n    }\r\n    resetForm();\r\n    dispatch(\r\n      createGroupStart({\r\n        data: {\r\n          id: ModiFygroup ? modifyrow?.id : undefined,\r\n          groupName: values.groupname,\r\n          groupDescription: values.desc,\r\n          shipper: shipperstr.substring(1, shipperstr.length),\r\n          featureIds: featureidstr.substring(1, featureidstr.length),\r\n        },\r\n        onCreateGroup: handleSuccess,\r\n      }),\r\n    );\r\n  };\r\n  const modifyrowas = modifyrow;\r\n  const featureidarr = modifyrowas?.featureID?.split('~');\r\n  const rowSelectCritera = () => {\r\n    if (data?.rows?.length) {\r\n      const indexarr = [];\r\n      data?.rows?.forEach((elem, index) => {\r\n        if (featureidarr?.includes(elem.id)) {\r\n          indexarr.push(elem.srn);\r\n        }\r\n      });\r\n      setSelectedIndex(indexarr);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    if (ModiFygroup) {\r\n      rowSelectCritera();\r\n    }\r\n  }, [ModiFygroup, data?.rows]);\r\n  const handleOnSelect = (row, isSelect) => {\r\n    if (isSelect) {\r\n      setSelectedIndex([...SelectedIndex, row?.srn]);\r\n    } else {\r\n      setSelectedIndex(SelectedIndex.filter(x => x !== row.srn));\r\n    }\r\n  };\r\n  const handleOnSelectAll = (isSelect, rows) => {\r\n    const ids = [];\r\n    for (const r of rows) {\r\n      if (r?.srn?.toString()) {\r\n        ids.push(r?.srn);\r\n      }\r\n    }\r\n    if (isSelect) {\r\n      setSelectedIndex(ids);\r\n    } else {\r\n      setSelectedIndex([]);\r\n    }\r\n  };\r\n  const selectRow = {\r\n    mode: 'checkbox',\r\n    clickToSelect: true,\r\n    selected: SelectedIndex,\r\n    onSelect: handleOnSelect,\r\n    onSelectAll: handleOnSelectAll,\r\n    selectColumnStyle: ({ checked, disabled, rowIndex, rowKey }) => {\r\n      return { display: rowKey.toString() ? 'block' : 'none' };\r\n    },\r\n  };\r\n  if (isLoading) {\r\n    return <Spinner className=\"spinner\" type=\"border\" color=\"dark\" />;\r\n  }\r\n  const createInitialValue = {\r\n    groupname: ModiFygroup ? modifyrow?.grpName : '',\r\n    desc: ModiFygroup ? modifyrow?.groupDescription : '',\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    groupname: ModiFygroup\r\n      ? Yup.string().notRequired()\r\n      : Yup.string().required('This Field is required!'),\r\n    desc: Yup.string().required('This Field is required!'),\r\n  });\r\n  return (\r\n    <Formik\r\n      initialValues={createInitialValue}\r\n      enableReinitialize={true}\r\n      validationSchema={validationSchema}\r\n      onSubmit={(values, { resetForm }) => {\r\n        handleSubmit(values, resetForm);\r\n      }}\r\n    >\r\n      {({ values, errors, handleChange, touched, setFieldValue }) => (\r\n        <Form>\r\n          <div className={`${isCreating && 'hidesection'} `}>\r\n            {isCreating && <SpinnerBlue />}\r\n            <h4 className=\"text-bold mb-3\">{ModiFygroup ? 'Edit Group' : 'Create Group'}</h4>\r\n\r\n            <div className=\"row justify-content-start wrapper\">\r\n              <div className=\"col-lg-3\">\r\n                <FormGroup>\r\n                  <Label for=\"exampleEmail\">Group Name</Label>\r\n                  <Input\r\n                    onChange={e => {\r\n                      handleChange(e);\r\n                    }}\r\n                    type=\"text\"\r\n                    name=\"groupname\"\r\n                    invalid={errors.groupname && touched.groupname}\r\n                    disabled={ModiFygroup}\r\n                    value={values.groupname}\r\n                    id=\"exampleEmail\"\r\n                    placeholder=\"Group Name\"\r\n                  />\r\n                  <FormFeedback>{errors.groupname}</FormFeedback>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <FormGroup>\r\n                  <Label for=\"examplePassword\">Description</Label>\r\n                  <Input\r\n                    onChange={e => handleChange(e)}\r\n                    type=\"text\"\r\n                    invalid={errors.desc && touched.desc}\r\n                    value={values.desc}\r\n                    name=\"desc\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"description\"\r\n                  />\r\n                  <FormFeedback>{errors.desc}</FormFeedback>\r\n                </FormGroup>\r\n              </div>\r\n              <div className=\"col-lg-3\">\r\n                <FormGroup>\r\n                  <Label for=\"exampleSelect\">Select Company/Shipper</Label>\r\n                  <Select\r\n                    isMulti\r\n                    options={CompanyData}\r\n                    // value={CompanyData}\r\n                    value={Shipper}\r\n                    classNamePrefix=\"react-select\"\r\n                    className=\"react-select-container\"\r\n                    onChange={tag => {\r\n                      setShipper(tag);\r\n                    }}\r\n                  />\r\n                  {Shippererror && (\r\n                    <FormFeedback style={{ display: 'block' }}>Please select Shipper</FormFeedback>\r\n                  )}\r\n                </FormGroup>\r\n              </div>\r\n            </div>\r\n            <div className=\"mt-2 \">\r\n              {ModiFygroup ? (\r\n                <BootstrapTable\r\n                  keyField=\"srn\"\r\n                  data={data?.rows}\r\n                  columns={columns}\r\n                  bordered={false}\r\n                  selectRow={selectRow}\r\n                />\r\n              ) : (\r\n                <DataTable\r\n                  columns={data?.columns}\r\n                  data={data?.rows}\r\n                  customStyles={customStyles}\r\n                  selectableRowsComponent={Checkbox}\r\n                  selectableRows\r\n                  onSelectedRowsChange={handleChangerow}\r\n                />\r\n              )}\r\n            </div>\r\n            <Button type=\"submit\" className=\"mt-2\">\r\n              Submit\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  );\r\n};\r\n\r\nexport default React.memo(Features);\r\nconst Checkbox = React.forwardRef(({ onClick, ...rest }, ref) => {\r\n  return (\r\n    <div>\r\n      {rest.name.includes('view_access') ||\r\n      rest.name.includes('write_access') ||\r\n      rest.name.includes('admin_access') ? null : (\r\n        <div className=\"form-check \" style={{ backgroundColor: '' }}>\r\n          <input\r\n            type=\"checkbox\"\r\n            className=\"form-check-input\"\r\n            ref={ref}\r\n            onClick={onClick}\r\n            {...rest}\r\n          />\r\n          <label className=\"form-check-label\" id=\"booty-check\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n});\r\n","/* eslint-disable no-lonely-if */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-syntax */\r\nimport { Form, Formik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport { Button, Col, FormFeedback, FormGroup, Input, Label } from 'reactstrap';\r\nimport * as Yup from 'yup';\r\nimport { CustomModal } from '../../../components';\r\nimport axiosMain from '../../../http/axios/axios_main';\r\nimport { SwitchGroupStart, getAllUsersStart, getUserSuccess } from '../../../store/actions';\r\n\r\nconst SwitchGroupModal = props => {\r\n  const { toggleAddData, setToggleAddData } = props;\r\n  const userdata = useSelector(state => state.auth.Currentuser);\r\n  const history = useHistory();\r\n  const [groupData, setGroupData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const getUserGroupAndCompany = async () => {\r\n    const GroupRes = await axiosMain.get('/v1/webapp/getUserGroups/All');\r\n    const temparr = [];\r\n    for (const elem of GroupRes?.data?.response) {\r\n      if (elem.groupName) {\r\n        temparr.push({\r\n          groupName: elem.groupName,\r\n          featureIds: elem.featureIds,\r\n        });\r\n      }\r\n    }\r\n    setGroupData(temparr);\r\n  };\r\n  useEffect(() => {\r\n    getUserGroupAndCompany();\r\n  }, []);\r\n  const createInitialValue = {\r\n    // password: '',\r\n    group: userdata?.loggedInGroup || '',\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    // password: Yup.string().required('This Field is required!'),\r\n    group: Yup.string().required('This Field is required!'),\r\n  });\r\n  const handleSuccess = (type, data) => {\r\n    if (type === 'success') {\r\n      toast.success('Switched Group');\r\n      localStorage.setItem('originalgrp', data?.originalGroup);\r\n      dispatch(getUserSuccess(data));\r\n      setToggleAddData();\r\n      history.push('/dashboard');\r\n    } else {\r\n      toast.error('User name or Email Already Exist!');\r\n    }\r\n  };\r\n  const handleSubmitData = (values, resetForm) => {\r\n    const valuesUser = {\r\n      // password: values.password,\r\n      targetGroup: values.group,\r\n      uuid: userdata?.uuid,\r\n      loggedInGroup: userdata?.loggedInGroup,\r\n    };\r\n    dispatch(\r\n      SwitchGroupStart({\r\n        data: valuesUser,\r\n        handleSuccess,\r\n      }),\r\n    );\r\n  };\r\n  return (\r\n    <CustomModal\r\n      title=\"Preview Group\"\r\n      isOpen={toggleAddData}\r\n      toggle={() => setToggleAddData()}\r\n      className=\"create-edit-item\"\r\n    >\r\n      <div className=\"mt-2 mb-2 mx-1 \">\r\n        <Formik\r\n          initialValues={createInitialValue}\r\n          enableReinitialize={true}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            handleSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({ values, errors, handleChange, touched, setFieldValue }) => (\r\n            <Form>\r\n              <FormGroup row>\r\n                <Label for=\"exampleSelect\" style={{ whiteSpace: 'nowrap' }} sm={3}>\r\n                  Preview Group\r\n                </Label>\r\n                <Col sm={9}>\r\n                  <Input\r\n                    invalid={errors.group && touched.group}\r\n                    type=\"select\"\r\n                    name=\"group\"\r\n                    value={values.group}\r\n                    onChange={handleChange}\r\n                    id=\"exampleSelect\"\r\n                  >\r\n                    <option>Select Group</option>\r\n                    {groupData?.map(elem => (\r\n                      <option key={elem.featureIds} value={elem.groupName}>\r\n                        {elem.groupName}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  <FormFeedback>{errors.group}</FormFeedback>\r\n                </Col>\r\n              </FormGroup>\r\n              {/* <FormGroup row>\r\n                <Label for=\"exampleEmail\" sm={2}>\r\n                  Password\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <Input\r\n                    invalid={errors.password && touched.password}\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    id=\"exampleEmail\"\r\n                    value={values.password}\r\n                    onChange={handleChange}\r\n                    placeholder=\"Password\"\r\n                  />\r\n                  <FormFeedback>{errors.password}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> */}\r\n              {/* <FormGroup row>\r\n                <Label for=\"examplePassword\" sm={2}>\r\n                  Email\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <Input\r\n                    invalid={errors.emailId && touched.emailId}\r\n                    type=\"email\"\r\n                    value={values.emailId}\r\n                    onChange={handleChange}\r\n                    name=\"emailId\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FormFeedback>{errors.emailId}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              <Button className=\"my-3 px-4\" type=\"submit\" color=\"danger\">\r\n                Preview Group\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default SwitchGroupModal;\r\n","/* eslint-disable no-const-assign */\r\n/* eslint-disable no-plusplus */\r\n/* eslint-disable no-else-return */\r\n/* eslint-disable consistent-return */\r\n/* eslint-disable no-shadow */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable arrow-body-style */\r\n/* eslint-disable react/jsx-no-undef */\r\nimport moment from 'moment';\r\nimport React, { useEffect, useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { customStyles } from '../../../components/TableStyle/customStyles';\r\nimport ConfirmModal from '../../../components/UI/Modal/ConfirmModal';\r\nimport axiosMain from '../../../http/axios/axios_main';\r\nimport { getUserGroupStart, setModifyGroup } from '../../../store/actions';\r\nimport SwitchGroupModal from './SwitchGroupModal';\r\n\r\nconst Groups = ({ setactiveTab }) => {\r\n  const dispatch = useDispatch();\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [perPage, setPerPage] = useState(10);\r\n  const [switchGroupModal, setSwitchGroupModal] = useState(false);\r\n  const featureIds = useSelector(state => state.auth.Currentuser?.featureIds);\r\n  const FeatureIds = featureIds?.split('~');\r\n  const [ConfirmationModal, setConfirmationModal] = useState({\r\n    open: false,\r\n    row: {},\r\n    delete: false,\r\n  });\r\n  const [currPage, setCurrentPage] = useState(0);\r\n  const [SRno, setSRno] = useState(0);\r\n  const del = async row => {\r\n    const res = await axiosMain.post('/v1/webapp/deleteUserGroup', {\r\n      groupName: row.grpName,\r\n    });\r\n    toast.success('Group deleted Successfully!');\r\n    dispatch(getUserGroupStart({ currPage, perPage }));\r\n  };\r\n  const ActionFormatter = ({ row }) => {\r\n    return (\r\n      <>\r\n        {FeatureIds?.includes('FT_ID_5') && (\r\n          <i\r\n            className=\"fas fa-pen pointer fa-lg cursor-pointer\"\r\n            title=\"Update\"\r\n            onClick={() => {\r\n              // dispatch(setModifyGroup({ ModiFygroup: true, modifyrow: row }));\r\n              setConfirmationModal({ open: true, row, delete: false });\r\n            }}\r\n            data-toggle=\"modal\"\r\n          />\r\n        )}\r\n        {FeatureIds?.includes('FT_ID_6') && (\r\n          <i\r\n            className=\"far mx-3 fa-trash-alt pointer fa-lg cursor-pointer\"\r\n            title=\"Delete\"\r\n            onClick={() => {\r\n              if (row.userattached === 0) {\r\n                // del(row);\r\n                setConfirmationModal({ open: true, row, delete: true });\r\n              } else {\r\n                toast.error('Cannot delete group with Users.');\r\n              }\r\n            }}\r\n            data-toggle=\"modal\"\r\n          />\r\n        )}{' '}\r\n      </>\r\n    );\r\n  };\r\n  const [Tabledata, setTableData] = useState({\r\n    columns: [\r\n      {\r\n        name: '#',\r\n        selector: row => row.srno,\r\n        width: '7%',\r\n      },\r\n      {\r\n        id: 'grpName',\r\n        name: 'Group Name',\r\n        selector: row => row.grpName,\r\n        width: '20%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'userattached',\r\n        name: 'Active Users',\r\n        selector: row => row.userattached,\r\n        width: '20%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'createdby',\r\n        name: 'Created By',\r\n        selector: row => row.createdby,\r\n        width: '20%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'createdAt',\r\n        name: 'Created On',\r\n        selector: row => row.createdAt,\r\n        width: '20%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: 'Action',\r\n        width: '13%',\r\n        cell: row => <ActionFormatter row={row} />,\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n  useEffect(() => {\r\n    dispatch(getUserGroupStart({ currPage, perPage }));\r\n    setSRno(currPage * perPage);\r\n  }, [perPage, currPage]);\r\n  const { AllGroups, isLoading } = useSelector(state => state.accessReducers);\r\n  useEffect(() => {\r\n    if (AllGroups?.response?.length) {\r\n      const temprow = [];\r\n      let no = SRno;\r\n      for (const i of AllGroups?.response[0]?.searchResult) {\r\n        temprow.push({\r\n          srno: no + 1,\r\n          srn: i.id,\r\n          shipper: i?.shipper ? i?.shipper?.split('~') : [],\r\n          createdby: i.createdBy,\r\n          grpName: i.groupName,\r\n          createdAt: i.createdAt\r\n            ? moment(i.createdAt).format('MM/DD/YYYY')\r\n            : moment(i.updatedAt).format('MM/DD/YYYY'),\r\n          id: i.id,\r\n          featureID: i.featureIds,\r\n          groupDescription: i.groupDescription,\r\n          userattached: i.noOfUserAttached,\r\n        });\r\n        no += 1;\r\n      }\r\n      setTableData({ ...Tabledata, rows: temprow });\r\n      setTotalRows(AllGroups?.response[0]?.totalCount);\r\n    }\r\n  }, [AllGroups?.response]);\r\n  const handlePageChange = page => {\r\n    setCurrentPage(page - 1);\r\n  };\r\n\r\n  const handlePerRowsChange = async newPerPage => {\r\n    setPerPage(newPerPage);\r\n  };\r\n  if (isLoading) {\r\n    return <Spinner className=\"spinner\" type=\"border\" color=\"dark\" />;\r\n  }\r\n  return (\r\n    <div className=\"mt-4\">\r\n      <h4 className=\"text-bold mb-2\">Groups</h4>\r\n      <Button\r\n        style={{ fontWeight: 'bolder' }}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setactiveTab('features');\r\n        }}\r\n        color=\"danger\"\r\n        className=\"my-2  \"\r\n      >\r\n        Create Group\r\n      </Button>\r\n      <Button\r\n        style={{ fontWeight: 'bolder' }}\r\n        type=\"button\"\r\n        onClick={() => {\r\n          setSwitchGroupModal(true);\r\n        }}\r\n        color=\"danger\"\r\n        className=\"my-2  mx-3\"\r\n      >\r\n        Preview Group\r\n      </Button>\r\n      <DataTable\r\n        columns={Tabledata?.columns}\r\n        data={Tabledata?.rows}\r\n        customStyles={customStyles}\r\n        paginationTotalRows={totalRows}\r\n        pagination\r\n        paginationServer\r\n        paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n        paginationDefaultPage={currPage + 1}\r\n        onChangePage={handlePageChange}\r\n        onChangeRowsPerPage={handlePerRowsChange}\r\n        paginationPerPage={perPage}\r\n      />\r\n      <ConfirmModal\r\n        title={ConfirmationModal.delete ? 'Delete Group Confirmation' : 'Edit Group Confirmation'}\r\n        question={\r\n          ConfirmationModal.delete\r\n            ? 'Delete will Remove the existing record. Do you still want to continue?'\r\n            : 'Any edit will update the existing record. Do you still want to continue?'\r\n        }\r\n        isOpen={ConfirmationModal.open}\r\n        toggle={() => setConfirmationModal({ open: false, row: {}, delete: false })}\r\n        handleSubmit={() => {\r\n          if (ConfirmationModal.delete) {\r\n            del(ConfirmationModal.row);\r\n          } else {\r\n            dispatch(setModifyGroup({ ModiFygroup: true, modifyrow: ConfirmationModal.row }));\r\n          }\r\n          setConfirmationModal({ open: false, row: {}, delete: false });\r\n        }}\r\n      />\r\n      {switchGroupModal && (\r\n        <SwitchGroupModal\r\n          toggleAddData={switchGroupModal}\r\n          setToggleAddData={() => setSwitchGroupModal(false)}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Groups;\r\n","/* eslint-disable no-lonely-if */\r\n/* eslint-disable react/jsx-boolean-value */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable no-restricted-syntax */\r\nimport { Form, Formik } from 'formik';\r\nimport { useEffect, useState } from 'react';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Button, Col, FormFeedback, FormGroup, Input, Label } from 'reactstrap';\r\nimport * as Yup from 'yup';\r\nimport { CustomModal } from '../../../components';\r\nimport axiosMain from '../../../http/axios/axios_main';\r\nimport { createUserStart, getAllUsersStart } from '../../../store/actions';\r\n\r\nconst AddUserModal = props => {\r\n  const { toggleAddData, setToggleAddData, isEdit, row } = props;\r\n  const [groupData, setGroupData] = useState([]);\r\n  const dispatch = useDispatch();\r\n  const getUserGroupAndCompany = async () => {\r\n    const GroupRes = await axiosMain.get('/v1/webapp/getUserGroups/All');\r\n    const temparr = [];\r\n    for (const elem of GroupRes?.data?.response) {\r\n      if (elem.groupName) {\r\n        temparr.push({\r\n          groupName: elem.groupName,\r\n          featureIds: elem.featureIds,\r\n        });\r\n      }\r\n    }\r\n    setGroupData(temparr);\r\n  };\r\n  useEffect(() => {\r\n    getUserGroupAndCompany();\r\n  }, []);\r\n  const createInitialValue = {\r\n    username: isEdit ? row.username : '',\r\n    emailId: isEdit ? row.email : '',\r\n    group: isEdit ? row.groupName : '',\r\n  };\r\n  const validationSchema = Yup.object().shape({\r\n    username: Yup.string().required('This Field is required!'),\r\n    emailId: Yup.string()\r\n      .email('Please enter valid email format')\r\n      .required('This Field is required!'),\r\n    group: Yup.string().required('This Field is required!'),\r\n  });\r\n  const handleSuccess = type => {\r\n    if (isEdit) {\r\n      if (type === 'success') {\r\n        toast.success('Updated User Successfully');\r\n        dispatch(getAllUsersStart({ currPage: 0, perPage: 10 }));\r\n        setToggleAddData();\r\n      } else {\r\n        toast.error('User name or Email Already Exist!');\r\n      }\r\n    } else {\r\n      if (type === 'success') {\r\n        toast.success(' User Created Successfully');\r\n        setToggleAddData();\r\n        dispatch(getAllUsersStart({ currPage: 0, perPage: 10 }));\r\n      } else {\r\n        toast.error('User name or Email Already Exist!');\r\n      }\r\n    }\r\n  };\r\n  const handleSubmitData = (values, resetForm) => {\r\n    const valuesUser = {\r\n      username: values.username,\r\n      email: values.emailId,\r\n      groupName: values.group,\r\n      shipper: values.company,\r\n    };\r\n    dispatch(\r\n      createUserStart({\r\n        data: isEdit\r\n          ? {\r\n              ...valuesUser,\r\n              id: row.id,\r\n            }\r\n          : {\r\n              ...valuesUser,\r\n            },\r\n        handleSuccess,\r\n      }),\r\n    );\r\n  };\r\n  return (\r\n    <CustomModal\r\n      title={isEdit ? 'Edit User' : 'Add User'}\r\n      isOpen={toggleAddData}\r\n      toggle={() => setToggleAddData()}\r\n      className=\"create-edit-item\"\r\n    >\r\n      <div className=\"mt-2 mb-2 mx-1 \">\r\n        <Formik\r\n          initialValues={createInitialValue}\r\n          enableReinitialize={true}\r\n          validationSchema={validationSchema}\r\n          onSubmit={(values, { resetForm }) => {\r\n            handleSubmitData(values, resetForm);\r\n          }}\r\n        >\r\n          {({ values, errors, handleChange, touched, setFieldValue }) => (\r\n            <Form>\r\n              <FormGroup row>\r\n                <Label for=\"exampleEmail\" sm={2}>\r\n                  User Name\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <Input\r\n                    invalid={errors.username && touched.username}\r\n                    type=\"text\"\r\n                    name=\"username\"\r\n                    id=\"exampleEmail\"\r\n                    value={values.username}\r\n                    onChange={handleChange}\r\n                    placeholder=\"User Name\"\r\n                  />\r\n                  <FormFeedback>{errors.username}</FormFeedback>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"examplePassword\" sm={2}>\r\n                  Email\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <Input\r\n                    invalid={errors.emailId && touched.emailId}\r\n                    type=\"email\"\r\n                    value={values.emailId}\r\n                    onChange={handleChange}\r\n                    name=\"emailId\"\r\n                    id=\"examplePassword\"\r\n                    placeholder=\"Email\"\r\n                  />\r\n                  <FormFeedback>{errors.emailId}</FormFeedback>\r\n                </Col>\r\n              </FormGroup>\r\n              <FormGroup row>\r\n                <Label for=\"exampleSelect\" style={{ whiteSpace: 'nowrap' }} sm={2}>\r\n                  Select Group\r\n                </Label>\r\n                <Col sm={10}>\r\n                  <Input\r\n                    invalid={errors.group && touched.group}\r\n                    type=\"select\"\r\n                    name=\"group\"\r\n                    value={values.group}\r\n                    onChange={handleChange}\r\n                    id=\"exampleSelect\"\r\n                  >\r\n                    <option>Select Group</option>\r\n                    {groupData?.map(elem => (\r\n                      <option key={elem.featureIds} value={elem.groupName}>\r\n                        {elem.groupName}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  <FormFeedback>{errors.group}</FormFeedback>\r\n                </Col>\r\n              </FormGroup>\r\n              {/* <FormGroup row>\r\n                <Label for=\"exampleSelect\" sm={4}>\r\n                  Select Company/Shipper\r\n                </Label>\r\n                <Col sm={8}>\r\n                  <Input\r\n                    invalid={errors.company && touched.company}\r\n                    type=\"select\"\r\n                    onChange={handleChange}\r\n                    value={values.company}\r\n                    name=\"company\"\r\n                    id=\"exampleSelect\"\r\n                  >\r\n                    <option>Select Company</option>\r\n\r\n                    {CompanyData?.map(elem => (\r\n                      <option key={elem} value={elem}>\r\n                        {elem}\r\n                      </option>\r\n                    ))}\r\n                  </Input>\r\n                  <FormFeedback>{errors.company}</FormFeedback>\r\n                </Col>\r\n              </FormGroup> */}\r\n\r\n              <Button className=\"my-3 px-4\" type=\"submit\" color=\"danger\">\r\n                {isEdit ? 'Edit User' : 'Add User'}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default AddUserModal;\r\n","/* eslint-disable no-const-assign */\r\n/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable no-undef */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable arrow-body-style */\r\n/* eslint-disable no-unused-vars */\r\nimport React, { useEffect, useState } from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport moment from 'moment';\r\nimport { toast } from 'react-hot-toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Spinner } from 'reactstrap';\r\nimport { getAllUsersStart } from '../../../store/actions';\r\nimport SpinnerBlue from '../../../components/UI/Spinner/Spinner';\r\nimport AddUserModal from './AddUserModal';\r\nimport ConfirmModal from '../../../components/UI/Modal/ConfirmModal';\r\nimport { customStyles } from '../../../components/TableStyle/customStyles';\r\nimport axiosMain from '../../../http/axios/axios_main';\r\n\r\nconst Users = () => {\r\n  const [EditUserModal, setEditUserModal] = useState({ open: false, row: {} });\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  const [ConfirmationModal, setConfirmationModal] = useState({\r\n    open: false,\r\n    row: {},\r\n    delete: false,\r\n  });\r\n  const [perPage, setPerPage] = useState(10);\r\n  const featureIds = useSelector(state => state.auth.Currentuser?.featureIds);\r\n  const FeatureIds = featureIds?.split('~');\r\n  const [currPage, setCurrentPage] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const [SRno, setSRno] = useState(0);\r\n  const edit = row => {\r\n    setConfirmationModal({ open: true, row, delete: false });\r\n  };\r\n  const del = row => {\r\n    setConfirmationModal({ open: true, row, delete: true });\r\n  };\r\n  const deleteUser = async row => {\r\n    const res = await axiosMain.post('/v1/webapp/deleteUser', {\r\n      userUUID: row.uuid,\r\n    });\r\n    if (res.data.responseCode === '200') {\r\n      toast.success('User deleted Successfully!');\r\n      dispatch(getAllUsersStart({ currPage, perPage }));\r\n    } else {\r\n      toast.error('User delete Failed!');\r\n    }\r\n  };\r\n  const ActionFormatter = ({ row }) => {\r\n    return (\r\n      <>\r\n        {FeatureIds?.includes('FT_ID_5') && (\r\n          <i\r\n            className=\"fas fa-pen pointer fa-lg cursor-pointer\"\r\n            title=\"Update\"\r\n            onClick={() => edit(row)}\r\n            data-toggle=\"modal\"\r\n          />\r\n        )}\r\n        {FeatureIds?.includes('FT_ID_6') && (\r\n          <i\r\n            className=\"far mx-3 fa-trash-alt pointer fa-lg cursor-pointer\"\r\n            title=\"Delete\"\r\n            onClick={() => del(row)}\r\n            data-toggle=\"modal\"\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  const [addUserModal, setAddUserModal] = useState(false);\r\n  const [Tabledata, setTableData] = useState({\r\n    columns: [\r\n      {\r\n        name: '#',\r\n        selector: row => row.srno,\r\n        width: '5%',\r\n      },\r\n      {\r\n        id: 'groupName',\r\n        name: 'Group Name',\r\n        selector: row => row.groupName,\r\n        width: '15%',\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'username',\r\n        name: 'User Name',\r\n        selector: row => row.username,\r\n        width: '15%',\r\n      },\r\n      {\r\n        id: 'createdby',\r\n        name: 'Created By',\r\n        selector: row => row.updatedBy,\r\n        width: '15%',\r\n      },\r\n      {\r\n        id: 'createdAt',\r\n        name: 'Created On',\r\n        selector: row => row.updatedAt,\r\n        width: '15%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: 'Email',\r\n        width: '20%',\r\n        selector: row => row.email,\r\n      },\r\n      {\r\n        name: 'Action',\r\n        width: '15%',\r\n        cell: row => <ActionFormatter row={row} />,\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n  const { AllUsers, isLoading, isCreating } = useSelector(state => state.accessReducers);\r\n  useEffect(() => {\r\n    dispatch(getAllUsersStart({ currPage, perPage }));\r\n    setSRno(currPage * perPage);\r\n  }, [perPage, currPage]);\r\n  useEffect(() => {\r\n    if (AllUsers?.response?.length) {\r\n      const temparr = [];\r\n      let no = SRno;\r\n      for (const elem of AllUsers?.response[0]?.searchResult) {\r\n        temparr.push({\r\n          groupName: elem.groupName,\r\n          username: elem.username,\r\n          email: elem.email,\r\n          id: elem.id,\r\n          uuid: elem.uuid,\r\n          updatedAt: moment(elem.updatedAt).format('MM/DD/YYYY'),\r\n          updatedBy: elem.updatedBy,\r\n          srno: no + 1,\r\n        });\r\n        no += 1;\r\n      }\r\n      setTableData({ ...Tabledata, rows: temparr });\r\n      setTotalRows(AllUsers?.response[0]?.totalCount);\r\n    }\r\n  }, [AllUsers?.response]);\r\n  if (isLoading) {\r\n    return <Spinner className=\"spinner\" type=\"border\" color=\"dark\" />;\r\n  }\r\n\r\n  const handlePageChange = page => {\r\n    setCurrentPage(page - 1);\r\n  };\r\n\r\n  const handlePerRowsChange = async newPerPage => {\r\n    setPerPage(newPerPage);\r\n  };\r\n  return (\r\n    <div className={`${isCreating && 'hidesection'}`}>\r\n      <h4 className=\"text-bold\">Users</h4>\r\n      <div className=\"mt-3\">\r\n        {isCreating && <SpinnerBlue />}\r\n        <Button type=\"button\" color=\"danger\" className=\"my-2\" onClick={() => setAddUserModal(true)}>\r\n          Add User\r\n        </Button>\r\n        <DataTable\r\n          columns={Tabledata?.columns}\r\n          data={Tabledata?.rows}\r\n          paginationTotalRows={totalRows}\r\n          pagination\r\n          paginationServer\r\n          paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n          paginationDefaultPage={currPage + 1}\r\n          customStyles={customStyles}\r\n          onChangePage={handlePageChange}\r\n          onChangeRowsPerPage={handlePerRowsChange}\r\n          paginationPerPage={perPage}\r\n        />\r\n      </div>\r\n      {addUserModal && (\r\n        <AddUserModal\r\n          toggleAddData={addUserModal}\r\n          setToggleAddData={() => setAddUserModal(false)}\r\n        />\r\n      )}\r\n      {EditUserModal.open && (\r\n        <AddUserModal\r\n          isEdit\r\n          toggleAddData={EditUserModal.open}\r\n          row={EditUserModal.row}\r\n          setToggleAddData={() => setEditUserModal({ open: false, row: {} })}\r\n        />\r\n      )}\r\n      <ConfirmModal\r\n        title={ConfirmationModal.delete ? 'Delete User Confirmation' : 'Edit User Confirmation'}\r\n        question={\r\n          ConfirmationModal.delete\r\n            ? `Delete will Remove the existing record. Do you still want to continue?`\r\n            : `Any edit will update the existing record. Do you still want to continue?`\r\n        }\r\n        isOpen={ConfirmationModal.open}\r\n        toggle={() => setConfirmationModal({ open: false, row: {}, delete: false })}\r\n        handleSubmit={() => {\r\n          if (ConfirmationModal.delete) {\r\n            deleteUser(ConfirmationModal.row);\r\n          } else {\r\n            setEditUserModal({ open: true, row: ConfirmationModal.row });\r\n          }\r\n          setConfirmationModal({ open: false, row: {}, delete: false });\r\n        }}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Users;\r\n","/* eslint-disable max-len */\r\n/* eslint-disable no-restricted-syntax */\r\n/* eslint-disable no-empty */\r\n/* eslint-disable no-unused-vars */\r\n/* eslint-disable arrow-body-style */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { Button } from 'reactstrap';\r\nimport { Spinner } from '../../../components';\r\n// eslint-disable-next-line import/no-named-as-default-member\r\nimport Features from './Features';\r\nimport Groups from './Groups';\r\nimport Users from './Users';\r\n\r\nconst AccessManagement = () => {\r\n  const [activeTab, setactiveTab] = useState('users');\r\n  const { ModiFygroup } = useSelector(state => state.accessReducers);\r\n  useEffect(() => {\r\n    if (ModiFygroup) {\r\n      setactiveTab('features');\r\n    }\r\n  }, [ModiFygroup]);\r\n  const Navigate = useLocation();\r\n  const history = useHistory();\r\n  const featureIds = useSelector(state => state.auth.Currentuser?.featureIds);\r\n  const FeatureIds = featureIds?.split('~');\r\n  useEffect(() => {\r\n    if (Navigate.search) {\r\n      setactiveTab(Navigate.search.split('=')[1]);\r\n    }\r\n  }, [Navigate]);\r\n  const pushState = tab => {\r\n    history.push(`/access-management?tab=${tab}`);\r\n  };\r\n  return (\r\n    <div>\r\n      <div className=\"wrapper mb-4 justify-content-start w-100\">\r\n        {FeatureIds?.includes('FT_ID_16') && (\r\n          <Button\r\n            type=\"button\"\r\n            style={{ fontWeight: 'bolder' }}\r\n            color={activeTab === 'users' ? 'danger' : 'secondary'}\r\n            outline={activeTab === 'users'}\r\n            onClick={() => {\r\n              pushState('users');\r\n            }}\r\n            className=\"mt-2 px-4\"\r\n          >\r\n            Manage Users\r\n          </Button>\r\n        )}\r\n        {/* <Button\r\n          style={{ fontWeight: 'bolder' }}\r\n          type=\"button\"\r\n          onClick={() => {\r\n            setactiveTab('features');\r\n          }}\r\n          color={activeTab === 'features' ? 'danger' : 'secondary'}\r\n          outline={activeTab === 'features'}\r\n          className=\"mt-2 mx-3 \"\r\n        >\r\n          Create Group\r\n        </Button> */}\r\n        {FeatureIds?.includes('FT_ID_17') && (\r\n          <Button\r\n            type=\"button\"\r\n            onClick={() => {\r\n              pushState('groups');\r\n            }}\r\n            style={{ fontWeight: 'bolder' }}\r\n            outline={activeTab === 'groups' || activeTab === 'features'}\r\n            color={activeTab === 'groups' || activeTab === 'features' ? 'danger' : 'secondary'}\r\n            className=\"mt-2 px-4 mx-3\"\r\n          >\r\n            Manage Groups\r\n          </Button>\r\n        )}\r\n      </div>\r\n      {activeTab === 'features' && <Features redirecttoGrp={() => setactiveTab('groups')} />}\r\n      {activeTab === 'users' && <Users />}\r\n      {activeTab === 'groups' && <Groups setactiveTab={() => setactiveTab('features')} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AccessManagement;\r\n"],"sourceRoot":""}