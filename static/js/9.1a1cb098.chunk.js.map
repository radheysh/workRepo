{"version":3,"sources":["components/TableStyle/customStyles.js","components/UI/Modal/ConfirmModal.jsx","constants/errorConstants.js","assets/images/SortIcon.svg","components/Actions/Actions.jsx","views/user/Dashboard/FilterModal.jsx","views/user/Dashboard/AddEditDataForm.jsx","views/user/Dashboard/AddDataModal.jsx","views/user/Dashboard/EditDataModal.jsx","views/user/Dashboard/ViewDataModal.jsx","views/user/Dashboard/Dashboard.jsx"],"names":["customStyles","rows","style","minHeight","headCells","paddingLeft","paddingRight","fontSize","fontFamily","opacity","display","justifyContent","headRow","borderTopWidth","borderTopColor","borderTopStyle","cells","ConfirmModal","isOpen","title","question","toggle","handleSubmit","isLoading","useSelector","state","dashboard","useEffect","document","body","overflow","scrollable","className","type","onClick","src","CLOSE_ICON","alt","color","EMAIL_REQUIRED","PASSWORD_REQUIRED","UNIT_TRAIN_SIZE_REQUIRED","SHIP_DATE","UNIT_TRAIN_NUMBER_REQUIRED","STCC_CODE_REQUIRED","BOL_NUMBER_REQUIRED","COMMODITY_NAME_REQUIRED","DENSITY_REQUIRED","SHIPPER_NAME_REQUIRED","BSW_REQUIRED","_path","_excluded","_extends","Object","assign","bind","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgSortIcon","_ref","svgRef","titleId","props","viewBox","xmlns","ref","id","d","ForwardRef","Actions","view","edit","del","history","idx","item","featureIds","includes","status","FilterModal","filterData","setFilterData","resetFilterValues","setConvertedFilterData","dispatch","useDispatch","useState","inputData","setInputData","filters","date","Date","currentDate","toISOString","split","fromDate","days","setDate","getDate","Number","handleChange","e","name","value","uploadedDate","editedDate","shippingDate","prev","htmlFor","onChange","uploadedTo","uploadedFrom","disabled","editedTo","editedFrom","shippingTo","shippingFrom","shipper","shippers","map","commodityName","commodityNames","md","crudeClassification","crudTypes","objData","forEach","convertFilterData","entries","setCurrPage","setPerPage","outline","AddEditDataForm","actionType","data","auth","Currentuser","FeatureIds","onValidSubmit","v","values","addShipmentData","label","transactionHash","shipDate","required","errorMessage","validate","placeholder","unitTrainSize","unitTrainNo","stccCode","dotClass","unNaNo","bolNo","product","hazardWarning","packingGroup","erpPiu","bswPerc","eraflashD93b","density","AddDataModal","toggleAddData","setToggleAddData","EditDataModal","toggleEditData","setToggleEditData","ViewDataModal","toggleViewData","setToggleViewData","createdDate","SubHeaderComponent","moment","utc","format","updatedDate","Dashboard","useHistory","undefined","selectedIdx","setSelectedIdx","toggleDeleteData","setToggleDeleteData","totalRows","setTotalRows","toggleFilterData","setToggleFilterData","alertData","historyDataObj","currPage","perPage","stopLoading","setStopLoading","convertedFilterData","filterDisplayData","setFilterDisplayData","attibName","sortType","sortKey","setSortKey","searchInput","setSearchInput","resetTablePage","setResetTablePage","toggleEditConfirm","setToggleEditConfirm","columns","selector","row","srn","width","sortServer","sortable","actions","setData","shipmentData","successMsg","errorMsg","getData","page","getShipmentData","pageNumber","filter","index","self","findIndex","t","searchTimeout","setTimeout","clearTimeout","getFilterData","searchResult","actionProps","getHistoryData","push","updateTableData","totalCount","handlePerRowsChange","newPerPage","nameConverter","result","replace","charAt","toUpperCase","slice","xs","substring","sm","pagination","paginationServer","paginationRowsPerPageOptions","paginationTotalRows","onChangePage","onChangeRowsPerPage","noDataComponent","sortIcon","SortIcon","onSort","selectedColumn","sortDirection","paginationDefaultPage","paginationResetDefaultPage","paginationPerPage","createdAt","selectedData","bolNumber","ledgerUuid","deleteShipmentData","NotificationAlert","delay","message"],"mappings":"oGAAA,sCAAMA,EAAe,CACnBC,KAAM,CACJC,MAAO,CACLC,UAAW,SAGfC,UAAW,CACTF,MAAO,CACLG,YAAa,MACbC,aAAc,MACdC,SAAU,OACVC,WAAY,wBACZC,QAAS,MACTC,QAAS,OACTC,eAAgB,kBAGpBC,QAAS,CACPV,MAAO,CACLW,eAAgB,MAChBC,eAAgB,kBAChBC,eAAgB,UAGpBC,MAAO,CACLd,MAAO,CACLG,YAAa,MACbC,aAAc,MACdC,SAAU,S,mCC5BhB,kDAqDeU,IA9Cf,YAA0E,IAAlDC,EAAiD,EAAjDA,OAAQC,EAAyC,EAAzCA,MAAOC,EAAkC,EAAlCA,SAAUC,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,aAC/CC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAV,IAA/BH,UAKR,OAJAI,qBAAU,WACIC,SAASC,KAAK3B,MAAM4B,SAA5BZ,EAAuC,SACP,SACrC,GAAE,CAACA,IAEF,mCACE,eAAC,QAAD,CAAOA,OAAQA,EAAQa,YAAU,EAACC,UAAU,sCAA5C,UACE,cAAC,YAAD,CAAWA,UAAU,OAArB,SACE,sBAAKA,UAAU,qCAAf,UACE,sBAAMA,UAAU,cAAhB,SAA+Bb,IAC/B,wBAAQc,KAAK,SAASD,UAAU,cAAcE,QAASb,EAAvD,SACE,qBAAKc,IAAKC,IAAYC,IAAI,YAIhC,uBACA,cAAC,YAAD,CAAWL,UAAU,kBAArB,SACE,qBAAKA,UAAU,uBAAf,SACE,qBAAKA,UAAU,MAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,qBAAKA,UAAU,sBAAf,SAAsCZ,IACtC,sBAAKY,UAAU,8CAAf,UACE,cAAC,SAAD,CAAQM,MAAM,YAAYN,UAAU,YAAYE,QAASb,EAAzD,gBAGA,cAAC,SAAD,CACEiB,MAAM,SACNN,UAAU,YACVE,QAAS,WACPZ,GACD,EALH,SAOGC,EAAY,mBAAGS,UAAU,qCAAwC,wBAUrF,C,mCCnDD,0XAAMO,EAAiB,qBAEjBC,EAAoB,wBACpBC,EAA2B,4BAC3BC,EAAY,yBACZC,EAA6B,8BAC7BC,EAAqB,sBAGrBC,EAAsB,uBAKtBC,EAA0B,2BAE1BC,EAAmB,oBAEnBC,EAAwB,4BACxBC,EAAe,mB,mCCnBrB,sCAAIC,EAAJ,OAEIC,EAAY,CAAC,QAAS,WAE1B,SAASC,IAAiS,OAApRA,EAAWC,OAAOC,OAASD,OAAOC,OAAOC,OAAS,SAAUC,GAAU,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CAAE,IAAIG,EAASF,UAAUD,GAAI,IAAK,IAAII,KAAOD,EAAcP,OAAOS,UAAUC,eAAeC,KAAKJ,EAAQC,KAAQL,EAAOK,GAAOD,EAAOC,GAAU,CAAE,OAAOL,CAAQ,EAAUJ,EAASa,MAAMC,KAAMR,UAAY,CAElV,SAASS,EAAyBP,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAAkEC,EAAKJ,EAAnED,EAEzF,SAAuCI,EAAQQ,GAAY,GAAc,MAAVR,EAAgB,MAAO,CAAC,EAAG,IAA2DC,EAAKJ,EAA5DD,EAAS,CAAC,EAAOa,EAAahB,OAAOiB,KAAKV,GAAqB,IAAKH,EAAI,EAAGA,EAAIY,EAAWV,OAAQF,IAAOI,EAAMQ,EAAWZ,GAAQW,EAASG,QAAQV,IAAQ,IAAaL,EAAOK,GAAOD,EAAOC,IAAQ,OAAOL,CAAQ,CAFhNgB,CAA8BZ,EAAQQ,GAAuB,GAAIf,OAAOoB,sBAAuB,CAAE,IAAIC,EAAmBrB,OAAOoB,sBAAsBb,GAAS,IAAKH,EAAI,EAAGA,EAAIiB,EAAiBf,OAAQF,IAAOI,EAAMa,EAAiBjB,GAAQW,EAASG,QAAQV,IAAQ,GAAkBR,OAAOS,UAAUa,qBAAqBX,KAAKJ,EAAQC,KAAgBL,EAAOK,GAAOD,EAAOC,GAAQ,CAAE,OAAOL,CAAQ,CAM3e,SAASoB,EAAYC,EAAMC,GACzB,IAAI3D,EAAQ0D,EAAK1D,MACb4D,EAAUF,EAAKE,QACfC,EAAQb,EAAyBU,EAAM1B,GAE3C,OAAoB,gBAAoB,MAAOC,EAAS,CACtD6B,QAAS,cACTC,MAAO,6BACPC,IAAKL,EACL,kBAAmBC,GAClBC,GAAQ7D,EAAqB,gBAAoB,QAAS,CAC3DiE,GAAIL,GACH5D,GAAS,KAAM+B,IAAUA,EAAqB,gBAAoB,OAAQ,CAC3EmC,EAAG,6hBAEP,CAEA,IAAIC,EAA0B,aAAiBV,GAChC,G,8LCYAW,MAtCf,YAAuE,IAApDC,EAAmD,EAAnDA,KAAMC,EAA6C,EAA7CA,KAAMC,EAAuC,EAAvCA,IAAKC,EAAkC,EAAlCA,QAASC,EAAyB,EAAzBA,IAAKC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,WACtD,OACE,uBAAM9D,UAAU,UAAhB,UACGwD,IAAI,OAAIM,QAAJ,IAAIA,OAAJ,EAAIA,EAAYC,SAAS,aAC5B,mBACE/D,UAAU,2CACVb,MAAM,OACNe,QAAS,kBAAMsD,EAAKI,EAAX,EACT,cAAY,UAGfH,GAAwB,YAAhBI,EAAKG,SAAb,OAAqCF,QAArC,IAAqCA,OAArC,EAAqCA,EAAYC,SAAS,aACzD,mBACE/D,UAAU,0CACVb,MAAM,SACNe,QAAS,kBAAMuD,EAAKG,EAAX,EACT,cAAY,UAGfF,GAAuB,YAAhBG,EAAKG,SAAZ,OAAoCF,QAApC,IAAoCA,OAApC,EAAoCA,EAAYC,SAAS,aACxD,mBACE/D,UAAU,gDACVb,MAAM,SACNe,QAAS,kBAAMwD,EAAIE,EAAV,EACT,cAAY,UAGfD,IAAO,OAAIG,QAAJ,IAAIA,OAAJ,EAAIA,EAAYC,SAAS,aAC/B,mBACE/D,UAAU,8CACVb,MAAM,UACNe,QAAS,kBAAMyD,EAAQE,EAAd,MAKlB,E,yBCsVcI,EAxXK,SAAC,GAOd,IAAD,MANJ/E,EAMI,EANJA,OACAG,EAKI,EALJA,OACA6E,EAII,EAJJA,WACAC,EAGI,EAHJA,cACAC,EAEI,EAFJA,kBACAC,EACI,EADJA,uBAEMC,EAAWC,cACjB,EAAkCC,mBAAS,CAAC,GAA5C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEQC,EAAYnF,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAV,IAA7BiF,QAERhF,qBAAU,WACR+E,EAAa,eAAKR,GACnB,GAAE,CAACA,IAEJ,IAAMU,EAAO,IAAIC,KACXC,GAAc,IAAID,MAAOE,cAAcC,MAAM,KAAK,GAClDC,EAAW,SAAAC,GAAI,OACnB,IAAIL,KAAKD,EAAKO,QAAQP,EAAKQ,UAAYC,OAAOH,KAAQH,cAAcC,MAAM,KAAK,EAD5D,EAGfM,EAAe,SAAAC,GAAM,IAAD,MACxB,EAAwBA,EAAE/D,OAAlBgE,EAAR,EAAQA,KAAMC,EAAd,EAAcA,MAEdf,EAAa,uFACRD,GADO,kBAETe,EAAOC,GAEJ,CAAC,eAAgB,cAAc1B,SAASyB,IAAS,CAAEE,aAAc,KACjE,CAAC,aAAc,YAAY3B,SAASyB,IAAS,CAAEG,WAAY,KAC3D,CAAC,eAAgB,cAAc5B,SAASyB,IAAS,CAAEI,aAAc,KACxD,iBAATJ,IAAA,mBACDA,EAAOC,GADN,6BAEsB,KAAVA,EAAeA,EAAQR,EAASQ,IAF5C,2BAGoB,KAAVA,EAAeA,EAAQX,GAHjC,IAKS,iBAATU,IAAA,mBACDA,EAAOC,GADN,6BAEsB,KAAVA,EAAeA,EAAQR,EAASQ,IAF5C,2BAGoB,KAAVA,EAAeA,EAAQX,GAHjC,IAKS,eAATU,IAAA,mBACDA,EAAOC,GADN,2BAEoB,KAAVA,EAAeA,EAAQR,EAASQ,IAF1C,yBAGkB,KAAVA,EAAeA,EAAQX,GAH/B,IAMP,EAkFD,OACE,cAAC,IAAD,CAAa5F,OAAQA,EAAQG,OAAQ,kBAAMA,GAAO,SAAAwG,GAAI,OAAKA,CAAL,GAAjB,EAA6B1G,MAAM,YAAxE,SACE,sBAAKa,UAAU,uBAAf,UACE,eAAC,MAAD,CAAKA,UAAU,OAAf,UACE,eAAC,MAAD,WACE,uBAAO8F,QAAQ,eAAe9F,UAAU,aAAxC,2BAGA,yBACEwF,KAAK,eACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAUiB,aAJnB,UAME,wBAAQD,MAAM,GAAd,qBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,gCAGJ,eAAC,MAAD,WACE,uBAAOK,QAAQ,eAAe9F,UAAU,aAAxC,kBAGA,uBACEC,KAAK,OACLuF,KAAK,eACLxF,UAAU,iDACV+F,SAAUT,EACVG,MAC2B,KAAzBhB,EAAUuB,YAAgD,KAA3BvB,EAAUwB,aACrCxB,EAAUuB,WACVvB,EAAUwB,aAEhBC,SAAUzB,EAAUiB,kBAGxB,eAAC,MAAD,WACE,uBAAOI,QAAQ,aAAa9F,UAAU,aAAtC,gBAGA,uBACEC,KAAK,OACLuF,KAAK,aACLxF,UAAU,iDACV+F,SAAUT,EACVG,MAC2B,KAAzBhB,EAAUuB,YAAgD,KAA3BvB,EAAUwB,aACrCnB,EACAL,EAAUuB,WAEhBE,SAAUzB,EAAUiB,qBAI1B,eAAC,MAAD,CAAK1F,UAAU,OAAf,UACE,eAAC,MAAD,WACE,uBAAO8F,QAAQ,aAAa9F,UAAU,aAAtC,yBAGA,yBACEwF,KAAK,aACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAUkB,WAJnB,UAME,wBAAQF,MAAM,GAAd,qBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,gCAGJ,eAAC,MAAD,WACE,uBAAOK,QAAQ,aAAa9F,UAAU,aAAtC,kBAGA,uBACEC,KAAK,OACLuF,KAAK,aACLxF,UAAU,iDACV+F,SAAUT,EACVG,MACyB,KAAvBhB,EAAU0B,UAA4C,KAAzB1B,EAAU2B,WACnC3B,EAAU0B,SACV1B,EAAU2B,WAEhBF,SAAUzB,EAAUkB,gBAGxB,eAAC,MAAD,WACE,uBAAOG,QAAQ,WAAW9F,UAAU,aAApC,gBAGA,uBACEC,KAAK,OACLuF,KAAK,WACLxF,UAAU,iDACV+F,SAAUT,EACVG,MACyB,KAAvBhB,EAAU0B,UAA4C,KAAzB1B,EAAU2B,WACnCtB,EACAL,EAAU0B,SAEhBD,SAAUzB,EAAUkB,mBAI1B,eAAC,MAAD,CAAK3F,UAAU,OAAf,UACE,eAAC,MAAD,WACE,uBAAO8F,QAAQ,eAAe9F,UAAU,aAAxC,2BAGA,yBACEwF,KAAK,eACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAUmB,aAJnB,UAME,wBAAQH,MAAM,GAAd,qBACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,0BACA,wBAAQA,MAAM,KAAd,gCAGJ,eAAC,MAAD,WACE,uBAAOK,QAAQ,eAAe9F,UAAU,aAAxC,kBAGA,uBACEC,KAAK,OACLuF,KAAK,eACLxF,UAAU,iDACV+F,SAAUT,EACVG,MAC2B,KAAzBhB,EAAU4B,YAAgD,KAA3B5B,EAAU6B,aACrC7B,EAAU4B,WACV5B,EAAU6B,aAEhBJ,SAAUzB,EAAUmB,kBAGxB,eAAC,MAAD,WACE,uBAAOE,QAAQ,aAAa9F,UAAU,aAAtC,gBAGA,uBACEC,KAAK,OACLuF,KAAK,aACLxF,UAAU,iDACV+F,SAAUT,EACVG,MAC2B,KAAzBhB,EAAU4B,YAAgD,KAA3B5B,EAAU6B,aACrCxB,EACAL,EAAU4B,WAEhBH,SAAUzB,EAAUmB,qBAI1B,eAAC,MAAD,CAAK5F,UAAU,OAAf,UACE,eAAC,MAAD,WACE,uBAAO8F,QAAQ,UAAU9F,UAAU,aAAnC,qBAGA,yBACEwF,KAAK,UACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAU8B,QAJnB,UAME,wBAAQd,MAAM,GAAd,0BANF,OAOGd,QAPH,IAOGA,GAPH,UAOGA,EAAS6B,gBAPZ,aAOG,EAAmBC,KAAI,SAAA5C,GAAI,OAC1B,wBAAQ4B,MAAO5B,EAAf,SAAsBA,GADI,UAKhC,eAAC,MAAD,WACE,uBAAOiC,QAAQ,gBAAgB9F,UAAU,aAAzC,4BAGA,yBACEwF,KAAK,gBACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAUiC,cAJnB,UAME,wBAAQjB,MAAM,GAAd,6BANF,OAOGd,QAPH,IAOGA,GAPH,UAOGA,EAASgC,sBAPZ,aAOG,EAAyBF,KAAI,SAAA5C,GAAI,OAChC,wBAAQ4B,MAAO5B,EAAf,SAAsBA,GADU,aAMxC,eAAC,MAAD,CAAK7D,UAAU,OAAf,UACE,eAAC,MAAD,CAAK4G,GAAI,EAAT,UACE,uBAAOd,QAAQ,sBAAsB9F,UAAU,aAA/C,wBAGA,yBACEwF,KAAK,sBACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAUoC,oBAJnB,UAME,wBAAQpB,MAAM,GAAd,6BANF,OAOGd,QAPH,IAOGA,GAPH,UAOGA,EAASmC,iBAPZ,aAOG,EAAoBL,KAAI,SAAA5C,GAAI,MAAa,KAATA,GAAe,wBAAQ4B,MAAO5B,EAAf,SAAsBA,GAAzC,UAGjC,eAAC,MAAD,CAAK+C,GAAI,EAAT,UACE,uBAAOd,QAAQ,SAAS9F,UAAU,aAAlC,oBAGA,yBACEwF,KAAK,SACLxF,UAAU,gDACV+F,SAAUT,EACVG,MAAOhB,EAAUT,OAJnB,UAME,wBAAQyB,MAAM,GAAd,oBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,SAAd,6BAIN,eAAC,MAAD,CAAKzF,UAAU,OAAf,UACE,cAAC,MAAD,CAAK4G,GAAI,EAAT,SACE,cAAC,SAAD,CAAQtG,MAAM,SAASN,UAAU,QAAQE,QAlT9B,WACU,KAAzBuE,EAAUuB,YAAgD,KAA3BvB,EAAUwB,eAC3CxB,EAAUwB,aAAexB,EAAUuB,YAER,KAAzBvB,EAAUuB,YAAgD,KAA3BvB,EAAUwB,eAC3CxB,EAAUuB,WAAalB,GAEE,KAAvBL,EAAU0B,UAA4C,KAAzB1B,EAAU2B,aACzC3B,EAAU2B,WAAa3B,EAAU0B,UAER,KAAvB1B,EAAU0B,UAA4C,KAAzB1B,EAAU2B,aACzC3B,EAAU0B,SAAWrB,GAEM,KAAzBL,EAAU4B,YAAgD,KAA3B5B,EAAU6B,eAC3C7B,EAAU6B,aAAe7B,EAAU4B,YAER,KAAzB5B,EAAU4B,YAAgD,KAA3B5B,EAAU6B,eAC3C7B,EAAU4B,WAAavB,GAGzBX,EAAcM,GAEd,IAAMsC,EAAO,eAAQtC,GAGrBpD,OAAOiB,KAAKyE,GAASC,SAAQ,SAAAnF,GACN,KAAjBkF,EAAQlF,WACHkF,EAAQlF,EAElB,WAEMkF,EAAQrB,oBACRqB,EAAQnB,oBACRmB,EAAQpB,WAGf,IAAMsB,EAAoB5F,OAAO6F,QAAQH,GAASN,KAAI,mCAAE5E,EAAF,KAAO4D,EAAP,wBAAC,yBACrDD,KAAM3D,EACN4D,SACI,CAAC,eAAgB,cAAc1B,SAASlC,IAAQ,CAClD2D,KAAM,cACNC,QACAxF,KAAc,eAAR4B,EAAuB,WAAa,eAExC,CAAC,aAAc,YAAYkC,SAASlC,IAAQ,CAC9C2D,KAAM,cACNC,QACAxF,KAAc,aAAR4B,EAAqB,WAAa,eAEtC,CAAC,eAAgB,cAAckC,SAASlC,IAAQ,CAClD2D,KAAM,WACNC,QACAxF,KAAc,eAAR4B,EAAuB,WAAa,cAhBQ,IAoBtDwC,EAAuB4C,GACvB3C,EAAS6C,YAAY,IACrB7C,EAAS8C,aAAW,KACpB/H,GAAO,EACR,EAsPS,qBAIF,cAAC,MAAD,CAAKuH,GAAI,EAAT,SACE,cAAC,SAAD,CACES,SAAO,EACP/G,MAAM,YACNN,UAAU,uBACVE,QA7PQ,WAClBwE,EAAa,CACXgC,cAAe,GACfG,oBAAqB,GACrBlB,WAAY,GACZS,WAAY,GACZD,SAAU,GACVI,QAAS,GACTX,aAAc,GACdU,aAAc,GACdD,WAAY,GACZX,aAAc,GACdO,aAAc,GACdD,WAAY,GACZhC,OAAQ,WAEVI,GACD,EAwOS,4BAaX,E,kBCtDckD,EArTS,SAAAtE,GACtB,IAAQuE,EAA6BvE,EAA7BuE,WAAYlI,EAAiB2D,EAAjB3D,OAAQmI,EAASxE,EAATwE,KACtBlD,EAAWC,cACThF,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAV,IAA/BH,UAOFuE,EAAatE,aAAY,SAAAC,GAAK,uBAAIA,EAAMgI,KAAKC,mBAAf,aAAI,EAAwB5D,UAA5B,IAC9B6D,EAAU,OAAG7D,QAAH,IAAGA,OAAH,EAAGA,EAAYkB,MAAM,KAErC,OACE,mCACE,eAAC,SAAD,CACEhF,UAAU,uCACV4H,cAAe,SAACrC,EAAGsC,GAZC,IAAQC,IAaLD,EAZR,QAAfN,GAAsBjD,EAASyD,YAAgB,CAAED,SAAQzI,YAC1C,SAAfkI,GACFjD,EAASyD,YAAgB,CAAED,OAAO,2BAAMA,GAAP,IAAe1E,GAAIoE,EAAKpE,KAAM/D,WAW5D,EAJH,UAMkB,SAAfkI,GACC,cAAC,MAAD,UACE,cAAC,MAAD,CAAKX,GAAI,GAAT,SACE,cAAC,UAAD,CACEpB,KAAK,kBACLwC,MAAM,UACN/H,KAAK,OACLwF,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMS,kBAAmB,MAChCjI,UAAU,eACVkG,UAAQ,QAKA,QAAfqB,GACC,oBAAGvH,UAAU,aAAb,UACE,mBAAGA,UAAU,mCADf,qDAEoD,6CAFpD,mDAMF,eAAC,MAAD,CAAKA,UAAU,OAAf,UACE,cAAC,MAAD,CAAK4G,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,WACLwC,MAAM,cACN/H,KAAK,OACLwF,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMU,WAAY,GACzBlI,UAAU,eACVmI,UAAQ,EACRC,aAAc1H,IACd2H,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,UACLwC,MAAM,iBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMjB,UAAW,GACxBvG,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,qBAC7CtH,KAAK,OACLkI,UAAQ,EACRC,aAAcpH,IACdqH,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,SAIhB,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,gBACLwC,MAAM,oBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMe,gBAAiB,GAC9BvI,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,wBAC7CtH,KAAK,SACLkI,UAAQ,EACRC,aAAc3H,IACd4H,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,cACLwC,MAAM,kBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMgB,cAAe,GAC5BxI,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,uBAC7CtH,KAAK,OACLkI,UAAQ,EACRC,aAAczH,IACd0H,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,SAIhB,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,WACLwC,MAAM,cACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMiB,WAAY,GACzBzI,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,kBAC7CtH,KAAK,SACLkI,UAAQ,EACRC,aAAcxH,IACdyH,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,WACLwC,MAAM,YACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMkB,WAAY,GACzB1I,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,uBAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,SAIhB,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,SACLwC,MAAM,YACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMmB,SAAU,GACvB3I,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,kBAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,QACLwC,MAAM,WACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMoB,QAAS,GACtB5I,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,gBAC7CtH,KAAK,OACLkI,UAAQ,EACRC,aAAcvH,IACdwH,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,GAAwC,SAAfA,SAIzC,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,UACLwC,MAAM,UACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMqB,UAAW,GACxB7I,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,qBAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,gBACLwC,MAAM,iBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMsB,gBAAiB,GAC9B9I,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,4BAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,SAIhB,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,eACLwC,MAAM,gBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMuB,eAAgB,GAC7B/I,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,4BAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,SACLwC,MAAM,gBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMwB,SAAU,GACvBhJ,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,yBAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,SAIhB,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,gBACLwC,MAAM,mBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMd,gBAAiB,GAC9B1G,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,6BAC7CtH,KAAK,OACLkI,UAAQ,EACRC,aAActH,IACduH,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,UACLwC,MAAM,UACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMyB,UAAW,GACxBjJ,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,mBAC7CtH,KAAK,SACLkI,UAAQ,EACRC,aAAcnH,IACdoH,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,SAIhB,eAAC,MAAD,WACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,eACLwC,MAAM,gBACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAM0B,eAAgB,GAC7BlJ,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,4BAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,MAGd,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,UACLwC,MAAM,YACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAM2B,UAAW,GACxBnJ,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,gBAC7CtH,KAAK,SACLkI,UAAQ,EACRC,aAAcrH,IACdsH,SAAU,CACRF,SAAU,CAAE1C,OAAO,IAErBS,SAAyB,SAAfqB,SAIhB,cAAC,MAAD,UACE,cAAC,MAAD,CAAKX,GAAI,EAAT,SACE,cAAC,UAAD,CACEpB,KAAK,sBACLwC,MAAM,aACNvC,OAAW,OAAJ+B,QAAI,IAAJA,OAAA,EAAAA,EAAMX,sBAAuB,GACpC7G,UAAU,eACVsI,YAA4B,SAAff,EAAwB,MAAQ,yBAC7CtH,KAAK,OACLiG,SAAyB,SAAfqB,QAIA,SAAfA,GAAyB,oBACV,SAAfA,GACC,cAAC,MAAD,CAAKvH,UAAU,OAAf,SACE,cAAC,MAAD,CAAK4G,GAAI,EAAT,UACa,OAAVe,QAAU,IAAVA,OAAA,EAAAA,EAAY5D,SAAS,cACpB,eAAC,SAAD,CAAQ9D,KAAK,SAASK,MAAM,SAASN,UAAU,QAA/C,UACGT,GAAa,mBAAGS,UAAU,sCACzBT,IAA6B,QAAfgI,EAAuB,eAAiB,2BASzE,ECnTc6B,EAdM,SAAApG,GACnB,IAAQqG,EAAoCrG,EAApCqG,cAAeC,EAAqBtG,EAArBsG,iBACvB,OACE,cAAC,IAAD,CACEnK,MAAM,eACND,OAAQmK,EACRhK,OAAQ,kBAAMiK,GAAiB,SAAAzD,GAAI,OAAKA,CAAL,GAA3B,EACR7F,UAAU,mBAJZ,SAME,cAAC,EAAD,CAAiBuH,WAAW,MAAMlI,OAAQ,kBAAMiK,GAAiB,SAAAzD,GAAI,OAAKA,CAAL,GAA3B,KAG/C,ECMc0D,EAlBO,SAAAvG,GACpB,IAAQwG,EAA4CxG,EAA5CwG,eAAgBC,EAA4BzG,EAA5ByG,kBAAmBjC,EAASxE,EAATwE,KAC3C,OACE,cAAC,IAAD,CACErI,MAAM,kBACND,OAAQsK,EACRnK,OAAQ,kBAAMoK,GAAkB,SAAA5D,GAAI,OAAKA,CAAL,GAA5B,EACR7F,UAAU,mBAJZ,SAME,cAAC,EAAD,CACEuH,WAAW,OACXC,KAAMA,EACNnI,OAAQ,kBAAMoK,GAAkB,SAAA5D,GAAI,OAAKA,CAAL,GAA5B,KAIf,ECiCc6D,G,OA9CO,SAAA1G,GACpB,IAAQ2G,EAAyD3G,EAAzD2G,eAAgBC,EAAyC5G,EAAzC4G,kBAAmBpC,EAAsBxE,EAAtBwE,KAAMqC,EAAgB7G,EAAhB6G,YA4BjD,OACE,cAAC,IAAD,CACE1K,MAAM,gBACND,OAAQyK,EACRG,mBA9BuB,kBACzB,mCACE,cAAC,YAAD,CAAW9J,UAAU,uBAArB,SACE,qBAAKA,UAAU,YAAf,SACE,gCACE,mBAAGA,UAAU,iBACb,uBAAMA,UAAU,OAAhB,0BACgB,IACd,uBAAMA,UAAU,iBAAhB,UAEG+J,IAAOC,IAAIH,GAAaI,OAAO,qBAFlC,aAKF,sBAAMjK,UAAU,kCAAhB,eACA,uBAAMA,UAAU,OAAhB,0BACgB,IACd,sBAAMA,UAAU,iBAAhB,SACO,OAAJwH,QAAI,IAAJA,KAAM0C,YAAN,UACIH,IAAOC,IAAP,OAAWxC,QAAX,IAAWA,OAAX,EAAWA,EAAM0C,aAAaD,OAAO,sBADzC,QACsE,mBAlB1D,EA+BvB5K,OAAQ,kBAAMuK,GAAkB,SAAA/D,GAAI,OAAKA,CAAL,GAA5B,EACR7F,UAAU,mBALZ,SAOE,cAAC,EAAD,CACEuH,WAAW,OACXC,KAAMA,EACNnI,OAAQ,kBAAMuK,GAAkB,SAAA/D,GAAI,OAAKA,CAAL,GAA5B,KAIf,G,0BCoYcsE,UAzZG,WAAO,IAAD,EAChB7F,EAAWC,cACXZ,EAAUyG,cAChB,EAAsC5F,wBAAS6F,GAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA4C/F,oBAAS,GAArD,mBAAOgF,EAAP,KAAuBC,EAAvB,KACA,EAAgDjF,oBAAS,GAAzD,mBAAOgG,EAAP,KAAyBC,EAAzB,KACA,EAA0CjG,oBAAS,GAAnD,mBAAO6E,EAAP,KAAsBC,EAAtB,KACA,EAA4C9E,oBAAS,GAArD,mBAAOmF,EAAP,KAAuBC,EAAvB,KACA,EAAkCpF,mBAAS,GAA3C,mBAAOkG,EAAP,KAAkBC,EAAlB,KAGA,EAAgDnG,oBAAS,GAAzD,mBAAOoG,EAAP,KAAyBC,EAAzB,KACA,GAAyDrL,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAV,IAAlEoL,GAAR,GAAQA,UAAWC,GAAnB,GAAmBA,eAAgBC,GAAnC,GAAmCA,SAAUC,GAA7C,GAA6CA,QACvCnH,GAAatE,aAAY,SAAAC,GAAK,uBAAIA,EAAMgI,KAAKC,mBAAf,aAAI,EAAwB5D,UAA5B,IAC9B6D,GAAU,OAAG7D,SAAH,IAAGA,QAAH,EAAGA,GAAYkB,MAAM,KACrC,GAAoCR,mBAAS,CAC3CkC,cAAe,GACfG,oBAAqB,GACrBlB,WAAY,GACZS,WAAY,GACZD,SAAU,GACVI,QAAS,GACTX,aAAc,GACdU,aAAc,GACdD,WAAY,GACZX,aAAc,GACdO,aAAc,GACdD,WAAY,GACZhC,OAAQ,WAbV,qBAAOE,GAAP,MAAmBC,GAAnB,MAeA,GAAsCK,oBAAS,GAA/C,qBAAO0G,GAAP,MAAoBC,GAApB,MACA,GAAsD3G,mBAAS,CAC7D,CACEgB,KAAM,SACNC,MAAO,YAHX,qBAAO2F,GAAP,MAA4B/G,GAA5B,MAMA,GAAkDG,mBAAS,IAA3D,qBAAO6G,GAAP,MAA0BC,GAA1B,MACA,GAA8B9G,mBAAS,CACrC+G,UAAW,cACXC,SAAU,SAFZ,qBAAOC,GAAP,MAAgBC,GAAhB,MAKA,GAAsClH,wBAAS6F,GAA/C,qBAAOsB,GAAP,MAAoBC,GAApB,MACA,GAA4CpH,oBAAS,GAArD,qBAAOqH,GAAP,MAAuBC,GAAvB,MACA,GAAkDtH,oBAAS,GAA3D,qBAAOuH,GAAP,MAA0BC,GAA1B,MAEA,GAAwBxH,mBAAS,CAC/ByH,QAAS,CACP,CACEzG,KAAM,MACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAIC,GAAR,EACbC,MAAO,MAET,CACEjJ,GAAI,UACJoC,KAAM,UACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAI5F,OAAR,EACb8F,MAAO,MACPC,YAAY,EACZC,UAAU,GAEZ,CACEnJ,GAAI,WACJoC,KAAM,YACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAIjE,QAAR,EACbmE,MAAO,SACPC,YAAY,EACZC,UAAU,GAEZ,CACEnJ,GAAI,cACJoC,KAAM,gBACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAI3D,WAAR,EACb6D,MAAO,MACPC,YAAY,EACZC,UAAU,GAEZ,CACEnJ,GAAI,QACJoC,KAAM,UACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAIvD,KAAR,EACbyD,MAAO,MACPC,YAAY,EACZC,UAAU,GAEZ,CACEnJ,GAAI,gBACJoC,KAAM,YACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAIzF,aAAR,EACb2F,MAAO,SACPC,YAAY,EACZC,UAAU,GAEZ,CACEnJ,GAAI,sBACJoC,KAAM,aACN0G,SAAU,SAAAC,GAAG,OAAKA,EAAItF,oBAAsBsF,EAAItF,oBAAsB,KAAzD,EACbwF,MAAO,SACPC,YAAY,EACZC,UAAU,GAEZ,CACE/G,KAAM,UACN0G,SAAU,SAAAC,GAAG,OAAIA,EAAIK,OAAR,EACbH,MAAO,QAGXpO,KAAM,KA7DR,qBAAOuJ,GAAP,MAAaiF,GAAb,MAgEA,GAA0DjN,aAAY,SAAAC,GAAK,OAAIA,EAAMC,SAAV,IAAnEH,GAAR,GAAQA,UAAWmN,GAAnB,GAAmBA,aAAcC,GAAjC,GAAiCA,WAAYC,GAA7C,GAA6CA,SAEvCC,GAAU,SAAAC,GACdxI,EACEyI,YAAgB,CACdC,WAAYF,EACZ7B,WACAtG,QAAQ,CAAD,eAAQgH,KAAR,mBAA0BP,KACjCK,QAAQ,eAAMA,MAGnB,EAED9L,qBAAU,WACRkN,GAAQ7B,IACH3J,OAAOiB,KAAKmJ,IAAS9J,QACxBwJ,IAAe,GAEjBW,IAAmBD,IACfT,IACFE,GAAqB,YAChBF,GAAoB6B,QACrB,SAACxH,EAAOyH,EAAOC,GAAf,OAAwBD,IAAUC,EAAKC,WAAU,SAAAC,GAAC,OAAIA,EAAE7H,OAASC,EAAMD,IAArB,GAAlD,KAIP,GAAE,CAAC4F,GAAqBuB,GAAYlB,GAASR,KAE9CtL,qBAAU,WACR,IAAM2N,EAAgBC,YAAW,WAC3B5B,KACFkB,GAAQ,GACRvI,EAAS6C,YAAY,IAExB,GAAE,KAEH,OAAO,kBAAMqG,aAAaF,EAAnB,CACR,GAAE,CAAC3B,KAEJhM,qBAAU,WACR2E,EAASmJ,cACV,GAAE,IAEH9N,qBAAU,WACJoL,IAAc,OAAI2B,SAAJ,IAAIA,OAAcgB,aAAapD,IAC/CV,GAAkB,SAAA/D,GAAI,OAAKA,CAAL,GAEzB,GAAE,CAACkF,KAEJ,IAAM4C,GAAc,CAClBnK,KAAM,SAAAI,GACJ2G,EAAe3G,GACfU,EAASsJ,YAAc,OAAClB,SAAD,IAACA,QAAD,EAACA,GAAcgB,aAAa9J,GAAKgF,OAEzD,EACDnF,KAAM,SAAAG,GACJ2G,EAAe3G,GACfoI,IAAqB,SAAAnG,GAAI,OAAKA,CAAL,GAC1B,EACDnC,IAAK,SAAAE,GACH2G,EAAe3G,GACf6G,GAAoB,SAAA5E,GAAI,OAAKA,CAAL,GACzB,EACDlC,QAAS,SAAAE,GAAI,OAAIF,EAAQkK,KAAR,wBAA8BhK,EAAK+E,OAAvC,GAefjJ,qBAAU,WACJiN,IACFzB,IAAe,EAElB,GAAE,CAACyB,KAEJjN,qBAAU,YAlBc,WAAO,IAAD,EAC5B8M,GAAQ,2BACHjF,IADE,IAELvJ,KAAI,OAAEyO,SAAF,IAAEA,IAAF,UAAEA,GAAcgB,oBAAhB,aAAE,EAA4BjH,KAAI,SAAC5C,EAAMD,GAAP,mBAAC,eAClCC,GADiC,IAEpCuI,IAAKxI,EAAM,EAAIoH,GAAWC,GAC1B/C,SAAU6B,IAAOlG,EAAKqE,UAAU+B,OAAO,cACvCuC,QAAS,cAAC,EAAD,yBAAS1I,WAAY6D,IAAgBgG,IAArC,IAAkD/J,IAAKA,EAAKC,KAAMA,MAJvC,MAOzC,CASCiK,GACA,OAAIpB,SAAJ,IAAIA,OAAcgB,cAChBvC,IAAe,GAEjBR,EAAY,OAAC+B,SAAD,IAACA,QAAD,EAACA,GAAcqB,WAC5B,GAAE,CAACrB,KAEJ,IAKMsB,GAAmB,iDAAG,WAAMC,GAAN,2EAC1B3J,EAAS8C,aAAW6G,IADM,2CAAH,sDAsCnBC,GAAgB,SAAA1I,GACpB,IAAM2I,EAAS3I,EAAK4I,QAAQ,WAAY,OACxC,OAAOD,EAAOE,OAAO,GAAGC,cAAgBH,EAAOI,MAAM,EACtD,EAaD,OACE,qCACE,cAAC,MAAD,UACE,qBAAIvO,UAAU,YAAd,wCAAuD0K,GAAY,OAGrE,eAAC,MAAD,CAAK1K,UAAU,OAAf,UACE,eAAC,MAAD,CAAKwO,GAAI,EAAT,WACa,OAAV7G,SAAU,IAAVA,QAAA,EAAAA,GAAY5D,SAAS,aACpB,eAAC,SAAD,CAAQzD,MAAM,SAASJ,QAAS,kBAAM2K,GAAoB,EAA1B,EAAiC7K,UAAU,aAA3E,UACE,mBAAGA,UAAU,kBADf,IACkC,sBAAMA,UAAU,OAAhB,uBAHtC,OAMGqL,SANH,IAMGA,QANH,EAMGA,GAAmB5E,KAAI,gBAAGjB,EAAH,EAAGA,KAAMC,EAAT,EAASA,MAAT,OACtB,eAAC,SAAD,CACEzF,UAAU,aACVE,QAAS,WACPmE,GACE+G,GAAoB6B,QAAO,SAAApJ,GAAI,OAAIA,EAAK2B,OAASA,GAAQA,CAA1B,KAEjCrB,GAAc,uCACTD,IADQ,kBAEVsB,EAAO,IACK,gBAATA,GAA0B,CAC5BE,aAAc,GACdO,aAAc,GACdD,WAAY,GACZL,WAAY,GACZS,WAAY,GACZD,SAAU,KAEC,aAATX,GAAuB,CACzBI,aAAc,GACdU,aAAc,GACdD,WAAY,KAGjB,EAvBH,UAyBE,+BACY,gBAATb,GAAmC,aAATA,EACvB0I,GAAc1I,GACdC,EAAM9D,OAAS,GAAf,iBACG8D,QADH,IACGA,OADH,EACGA,EAAOgJ,UAAU,EAAG,IADvB,OAEAhJ,IAEN,mBAAGzF,UAAU,wBAjCO,OAqC1B,eAAC,MAAD,CAAKwO,GAAI,EAAGxO,UAAU,mCAAtB,WACa,OAAV2H,SAAU,IAAVA,QAAA,EAAAA,GAAY5D,SAAS,aACpB,eAAC,cAAD,CAAa/D,UAAU,eAAeE,QAAS,kBAAMoJ,GAAiB,EAAvB,EAA/C,UACE,cAAC,SAAD,CAAQjC,SAAO,EAAf,SACE,mBAAGrH,UAAU,uBAEf,cAAC,SAAD,CAAQqH,SAAO,EAACrH,UAAU,iBAA1B,6BAKJ,sBAAKA,UAAU,wBAAf,UACE,sBAAMA,UAAU,uCAChB,uBACEC,KAAK,OACLD,UAAU,eACVsI,YAAY,uDACZvC,SA9ES,SAAAR,GACnBqG,GAAe,CACbpG,KAAM,UACNC,MAAOF,EAAE/D,OAAOiE,OAEnB,aA8EG,cAAC,MAAD,CAAKzF,UAAU,OAAf,SACE,eAAC,MAAD,CAAK0O,GAAI,GAAI1O,UAAU,oCAAvB,WACIT,KAAc2L,KACd,cAAC,UAAD,CAASlL,UAAU,UAAUC,KAAK,SAASK,MAAM,UAEjDkH,GAAKvJ,MAAQiN,GACb,mBAAGlL,UAAU,aAAb,6BAEA,cAAC,IAAD,CACEiM,QAASzE,GAAKyE,QACdzE,KAAMA,GAAKvJ,KACXD,aAAcA,IACd2Q,YAAU,EACVC,kBAAgB,EAChBC,6BAA8B,CAAC,GAAI,GAAI,GAAI,KAC3CC,oBAAqBpE,EACrBqE,aAnJa,SAAAjC,GACvBxI,EAAS6C,YAAY2F,EAAO,IAC5BD,GAAQC,EAAO,EAChB,EAiJWkC,oBAAqBhB,GACrBiB,iBAAkB1P,IAAa2L,IAAe,gBAC9CgE,SAAU,cAACC,EAAA,EAAD,IACV7C,YAAU,EACV8C,OAAQ,SAACC,EAAgBC,GACvB5D,GAAW,CACTH,UAAW8D,EAAejM,GAC1BoI,SAAU8D,GAEb,EACDC,sBAAuBvE,GAAW,EAClCwE,2BAA4B3D,GAC5B4D,kBAAmBxE,UAK3B,cAAC,EAAD,CACE/L,OAAQ0L,EACRvL,OAAQwL,EACR1G,cAAeA,GACfC,kBAtJoB,WACxBD,GAAc,CACZuC,cAAe,GACfG,oBAAqB,GACrBlB,WAAY,GACZS,WAAY,GACZD,SAAU,GACVI,QAAS,GACTX,aAAc,GACdU,aAAc,GACdD,WAAY,GACZX,aAAc,GACdO,aAAc,GACdD,WAAY,GACZhC,OAAQ,WAEVK,GAAuB,CACrB,CACEmB,KAAM,SACNC,MAAO,WAIZ,EAgIKvB,WAAYA,GACZG,uBAAwBA,KAE1B,cAAC,EAAD,CAAcgF,cAAeA,EAAeC,iBAAkBA,IAC9D,cAAC,EAAD,CACEE,eAAgBA,EAChBC,kBAAmBA,EACnBjC,KAAI,OAAEkF,SAAF,IAAEA,QAAF,EAAEA,GAAcgB,aAAapD,KAEnC,cAAC,EAAD,CACEX,eAAgBA,EAChBC,kBAAmBA,EACnBpC,KAAI,OAAEkF,SAAF,IAAEA,QAAF,EAAEA,GAAcgB,aAAapD,GACjCT,YAAakB,KAAc,UAAIA,GAAeA,GAAepJ,OAAS,UAA3C,aAAI,EAA2C+N,aAE5E,cAACzQ,EAAA,EAAD,CACEE,MAAM,kBACNC,SAAS,qDACTF,OAAQsL,EACRnL,OAAQ,kBAAMoL,GAAoB,SAAA5E,GAAI,OAAKA,CAAL,GAA9B,EACRvG,aArLmB,WACvB,IAAMqQ,EAAY,OAAGjD,SAAH,IAAGA,QAAH,EAAGA,GAAcgB,aAAapD,GAC1CxC,EAAS,CACb1E,GAAIuM,EAAavM,GACjBwM,UAAWD,EAAa/G,MACxBiH,WAAYF,EAAaE,YAE3BvL,EAASwL,YAAmB,CAAEhI,SAAQ+E,WAASpC,wBAChD,IA+KG,cAACxL,EAAA,EAAD,CACEE,MAAM,sBACNC,SAAS,2EACTF,OAAQ6M,GACR1M,OAAQ,kBAAM2M,IAAqB,SAAAnG,GAAI,OAAKA,CAAL,GAA/B,EACRvG,aA9IoB,WACxB0M,IAAqB,GACrBvC,GAAkB,SAAA5D,GAAI,OAAKA,CAAL,GACvB,KA6Ia,OAATiF,SAAS,IAATA,QAAA,EAAAA,GAAW5L,SACV,cAAC6Q,EAAA,EAAD,CAAmBC,MAAM,OAAO/P,KAAI,OAAE6K,SAAF,IAAEA,QAAF,EAAEA,GAAW7K,KAAMgQ,QAAO,OAAEnF,SAAF,IAAEA,QAAF,EAAEA,GAAWmF,YAIlF,C","file":"static/js/9.1a1cb098.chunk.js","sourcesContent":["const customStyles = {\r\n  rows: {\r\n    style: {\r\n      minHeight: '50px', // override the row height\r\n    },\r\n  },\r\n  headCells: {\r\n    style: {\r\n      paddingLeft: '8px', // override the cell padding for head cells\r\n      paddingRight: '8px',\r\n      fontSize: '17px',\r\n      fontFamily: 'SourceSansProSemiBold',\r\n      opacity: '0.8',\r\n      display: 'flex',\r\n      justifyContent: 'space-between',\r\n    },\r\n  },\r\n  headRow: {\r\n    style: {\r\n      borderTopWidth: '1px',\r\n      borderTopColor: 'rgba(0,0,0,.12)',\r\n      borderTopStyle: 'solid',\r\n    },\r\n  },\r\n  cells: {\r\n    style: {\r\n      paddingLeft: '8px', // override the cell padding for data cells\r\n      paddingRight: '8px',\r\n      fontSize: '16px',\r\n    },\r\n  },\r\n};\r\n\r\n// eslint-disable-next-line import/prefer-default-export\r\nexport { customStyles };\r\n","import { Button, Container, Modal } from 'reactstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport React, { useEffect } from 'react';\r\n\r\nimport { CLOSE_ICON } from '../../../assets/images';\r\nimport './modal.css';\r\n\r\nfunction ConfirmModal({ isOpen, title, question, toggle, handleSubmit }) {\r\n  const { isLoading } = useSelector(state => state.dashboard);\r\n  useEffect(() => {\r\n    if (isOpen) document.body.style.overflow = 'hidden';\r\n    else document.body.style.overflow = 'visible';\r\n  }, [isOpen]);\r\n  return (\r\n    <>\r\n      <Modal isOpen={isOpen} scrollable className=\"modal-dialog-centered confirm-modal\">\r\n        <Container className=\"px-3\">\r\n          <div className=\"modal-header h4 pb-0 pt-2 border-0\">\r\n            <span className=\"modal-title\">{title}</span>\r\n            <button type=\"button\" className=\"text-button\" onClick={toggle}>\r\n              <img src={CLOSE_ICON} alt=\"\" />\r\n            </button>\r\n          </div>\r\n        </Container>\r\n        <hr />\r\n        <Container className=\"modal-container\">\r\n          <div className=\"modal-body px-4 py-2\">\r\n            <div className=\"p-2\">\r\n              <div className=\"p-2 text-center\">\r\n                <div className=\"text-semi-bold f-20\">{question}</div>\r\n                <div className=\"d-flex justify-content-between mx-auto w-78\">\r\n                  <Button color=\"secondary\" className=\"px-5 mt-4\" onClick={toggle}>\r\n                    No\r\n                  </Button>\r\n                  <Button\r\n                    color=\"danger\"\r\n                    className=\"px-5 mt-4\"\r\n                    onClick={() => {\r\n                      handleSubmit();\r\n                    }}\r\n                  >\r\n                    {isLoading ? <i className=\"fa-solid fa-circle-notch fa-spin\" /> : 'Yes'}\r\n                  </Button>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </Container>\r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfirmModal;\r\n","const EMAIL_REQUIRED = 'Email is required.';\r\nconst VALID_EMAIL = 'Enter valid email.';\r\nconst PASSWORD_REQUIRED = 'Password is required.';\r\nconst UNIT_TRAIN_SIZE_REQUIRED = 'Unit train size required.';\r\nconst SHIP_DATE = 'Ship date is required.';\r\nconst UNIT_TRAIN_NUMBER_REQUIRED = 'Unit train number required.';\r\nconst STCC_CODE_REQUIRED = 'STCC code required.';\r\nconst DOT_CLASS_REQUIRED = 'Dot class required.';\r\nconst UN_NA_REQUIRED = 'UN NA number required.';\r\nconst BOL_NUMBER_REQUIRED = 'BOL number required.';\r\nconst PRODUCT_REQUIRED = 'Product is required.';\r\nconst HAZARD_WARNING_REQUIRED = 'Hazard warning required.';\r\nconst PACKING_GROUP_REQUIRED = 'Packing group required.';\r\nconst ERP_PIU_REQUIRED = 'E.R.P/P.I.U required.';\r\nconst COMMODITY_NAME_REQUIRED = 'Commodity Name required.';\r\nconst ERAFLASH_REQUIRED = 'Eraflash D93B required.';\r\nconst DENSITY_REQUIRED = 'Density required.';\r\nconst CRUDE_TYPE_REQUIRED = 'Crude type required.';\r\nconst SHIPPER_NAME_REQUIRED = 'Shipper name is required.';\r\nconst BSW_REQUIRED = 'BSW% is required.';\r\nconst FEATUREIDARRAY = [\r\n  'FT_ID_1',\r\n  'FT_ID_2',\r\n  'FT_ID_3',\r\n  'FT_ID_4',\r\n  'FT_ID_5',\r\n  'FT_ID_6',\r\n  'FT_ID_7',\r\n  'FT_ID_8',\r\n  'FT_ID_9',\r\n  'FT_ID_10',\r\n  'FT_ID_11',\r\n  'FT_ID_12',\r\n  'FT_ID_13',\r\n  'FT_ID_14',\r\n  'FT_ID_15',\r\n  'FT_ID_16',\r\n  'FT_ID_17',\r\n];\r\nexport {\r\n  EMAIL_REQUIRED,\r\n  VALID_EMAIL,\r\n  PASSWORD_REQUIRED,\r\n  UNIT_TRAIN_SIZE_REQUIRED,\r\n  SHIP_DATE,\r\n  UNIT_TRAIN_NUMBER_REQUIRED,\r\n  FEATUREIDARRAY,\r\n  STCC_CODE_REQUIRED,\r\n  DOT_CLASS_REQUIRED,\r\n  UN_NA_REQUIRED,\r\n  BOL_NUMBER_REQUIRED,\r\n  PRODUCT_REQUIRED,\r\n  HAZARD_WARNING_REQUIRED,\r\n  PACKING_GROUP_REQUIRED,\r\n  ERP_PIU_REQUIRED,\r\n  COMMODITY_NAME_REQUIRED,\r\n  ERAFLASH_REQUIRED,\r\n  DENSITY_REQUIRED,\r\n  CRUDE_TYPE_REQUIRED,\r\n  SHIPPER_NAME_REQUIRED,\r\n  BSW_REQUIRED,\r\n};\r\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSortIcon(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 512 512\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M304 416h-64a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h64a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM16 160h48v304a16 16 0 0 0 16 16h32a16 16 0 0 0 16-16V160h48c14.21 0 21.38-17.24 11.31-27.31l-80-96a16 16 0 0 0-22.62 0l-80 96C-5.35 142.74 1.77 160 16 160zm416 0H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h192a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zm-64 128H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h128a16 16 0 0 0 16-16v-32a16 16 0 0 0-16-16zM496 32H240a16 16 0 0 0-16 16v32a16 16 0 0 0 16 16h256a16 16 0 0 0 16-16V48a16 16 0 0 0-16-16z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSortIcon);\nexport default __webpack_public_path__ + \"static/media/SortIcon.b327758b.svg\";\nexport { ForwardRef as ReactComponent };","/* eslint-disable jsx-a11y/click-events-have-key-events */\r\n/* eslint-disable jsx-a11y/no-static-element-interactions */\r\nimport React from 'react';\r\n\r\nfunction Actions({ view, edit, del, history, idx, item, featureIds }) {\r\n  return (\r\n    <span className=\"actions\">\r\n      {view && featureIds?.includes('FT_ID_4') && (\r\n        <i\r\n          className=\"far fa-eye pointer fa-lg  cursor-pointer\"\r\n          title=\"View\"\r\n          onClick={() => view(idx)}\r\n          data-toggle=\"modal\"\r\n        />\r\n      )}\r\n      {edit && item.status !== 'Deleted' && featureIds?.includes('FT_ID_5') && (\r\n        <i\r\n          className=\"fas fa-pen pointer fa-lg cursor-pointer\"\r\n          title=\"Update\"\r\n          onClick={() => edit(idx)}\r\n          data-toggle=\"modal\"\r\n        />\r\n      )}\r\n      {del && item.status !== 'Deleted' && featureIds?.includes('FT_ID_6') && (\r\n        <i\r\n          className=\"far fa-trash-alt pointer fa-lg cursor-pointer\"\r\n          title=\"Delete\"\r\n          onClick={() => del(idx)}\r\n          data-toggle=\"modal\"\r\n        />\r\n      )}\r\n      {history && featureIds?.includes('FT_ID_7') && (\r\n        <i\r\n          className=\"fas fa-history pointer fa-lg cursor-pointer\"\r\n          title=\"History\"\r\n          onClick={() => history(item)}\r\n        />\r\n      )}\r\n    </span>\r\n  );\r\n}\r\n\r\nexport default Actions;\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Button, Col, Row } from 'reactstrap';\r\nimport { CustomModal } from '../../../components';\r\nimport { setCurrPage, setPerPage } from '../../../store/actions';\r\n\r\nconst FilterModal = ({\r\n  isOpen,\r\n  toggle,\r\n  filterData,\r\n  setFilterData,\r\n  resetFilterValues,\r\n  setConvertedFilterData,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n  const [inputData, setInputData] = useState({});\r\n\r\n  const { filters } = useSelector(state => state.dashboard);\r\n\r\n  useEffect(() => {\r\n    setInputData({ ...filterData });\r\n  }, [filterData]);\r\n\r\n  const date = new Date();\r\n  const currentDate = new Date().toISOString().split('T')[0];\r\n  const fromDate = days =>\r\n    new Date(date.setDate(date.getDate() - Number(days))).toISOString().split('T')[0];\r\n\r\n  const handleChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setInputData({\r\n      ...inputData,\r\n      [name]: value,\r\n      // set date field's value on changes based on days and date picker\r\n      ...(['uploadedFrom', 'uploadedTo'].includes(name) && { uploadedDate: '' }),\r\n      ...(['editedFrom', 'editedTo'].includes(name) && { editedDate: '' }),\r\n      ...(['shippingFrom', 'shippingTo'].includes(name) && { shippingDate: '' }),\r\n      ...(name === 'uploadedDate' && {\r\n        [name]: value,\r\n        uploadedFrom: value === '' ? value : fromDate(value),\r\n        uploadedTo: value === '' ? value : currentDate,\r\n      }),\r\n      ...(name === 'shippingDate' && {\r\n        [name]: value,\r\n        shippingFrom: value === '' ? value : fromDate(value),\r\n        shippingTo: value === '' ? value : currentDate,\r\n      }),\r\n      ...(name === 'editedDate' && {\r\n        [name]: value,\r\n        editedFrom: value === '' ? value : fromDate(value),\r\n        editedTo: value === '' ? value : currentDate,\r\n      }),\r\n    });\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (inputData.uploadedTo !== '' && inputData.uploadedFrom === '') {\r\n      inputData.uploadedFrom = inputData.uploadedTo;\r\n    }\r\n    if (inputData.uploadedTo === '' && inputData.uploadedFrom !== '') {\r\n      inputData.uploadedTo = currentDate;\r\n    }\r\n    if (inputData.editedTo !== '' && inputData.editedFrom === '') {\r\n      inputData.editedFrom = inputData.editedTo;\r\n    }\r\n    if (inputData.editedTo === '' && inputData.editedFrom !== '') {\r\n      inputData.editedTo = currentDate;\r\n    }\r\n    if (inputData.shippingTo !== '' && inputData.shippingFrom === '') {\r\n      inputData.shippingFrom = inputData.shippingTo;\r\n    }\r\n    if (inputData.shippingTo === '' && inputData.shippingFrom !== '') {\r\n      inputData.shippingTo = currentDate;\r\n    }\r\n\r\n    setFilterData(inputData);\r\n\r\n    const objData = { ...inputData };\r\n\r\n    // Remove empty attribute from object\r\n    Object.keys(objData).forEach(key => {\r\n      if (objData[key] === '') {\r\n        delete objData[key];\r\n      }\r\n    });\r\n\r\n    delete objData.uploadedDate;\r\n    delete objData.shippingDate;\r\n    delete objData.editedDate;\r\n\r\n    // Restructure data for api call\r\n    const convertFilterData = Object.entries(objData).map(([key, value]) => ({\r\n      name: key,\r\n      value,\r\n      ...(['uploadedFrom', 'uploadedTo'].includes(key) && {\r\n        name: 'updatedDate',\r\n        value,\r\n        type: key === 'uploadedTo' ? 'END_DATE' : 'START_DATE',\r\n      }),\r\n      ...(['editedFrom', 'editedTo'].includes(key) && {\r\n        name: 'updatedDate',\r\n        value,\r\n        type: key === 'editedTo' ? 'END_DATE' : 'START_DATE',\r\n      }),\r\n      ...(['shippingFrom', 'shippingTo'].includes(key) && {\r\n        name: 'shipDate',\r\n        value,\r\n        type: key === 'shippingTo' ? 'END_DATE' : 'START_DATE',\r\n      }),\r\n    }));\r\n\r\n    setConvertedFilterData(convertFilterData);\r\n    dispatch(setCurrPage(0));\r\n    dispatch(setPerPage(10));\r\n    toggle(false);\r\n  };\r\n\r\n  const resetFilter = () => {\r\n    setInputData({\r\n      commodityName: '',\r\n      crudeClassification: '',\r\n      editedDate: '',\r\n      editedFrom: '',\r\n      editedTo: '',\r\n      shipper: '',\r\n      shippingDate: '',\r\n      shippingFrom: '',\r\n      shippingTo: '',\r\n      uploadedDate: '',\r\n      uploadedFrom: '',\r\n      uploadedTo: '',\r\n      status: 'Active',\r\n    });\r\n    resetFilterValues();\r\n  };\r\n  return (\r\n    <CustomModal isOpen={isOpen} toggle={() => toggle(prev => !prev)} title=\"Filter By\">\r\n      <div className=\"p-2 pt-0 pb-3 filter\">\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            <label htmlFor=\"uploadedDate\" className=\"form-label\">\r\n              Uploaded Date\r\n            </label>\r\n            <select\r\n              name=\"uploadedDate\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.uploadedDate}\r\n            >\r\n              <option value=\"\">Anytime</option>\r\n              <option value=\"10\">Last 10 Days</option>\r\n              <option value=\"20\">Last 20 Days</option>\r\n              <option value=\"30\">Last 30 Days</option>\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"uploadedFrom\" className=\"form-label\">\r\n              From\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"uploadedFrom\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.uploadedTo !== '' && inputData.uploadedFrom === ''\r\n                  ? inputData.uploadedTo\r\n                  : inputData.uploadedFrom\r\n              }\r\n              disabled={inputData.uploadedDate}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"uploadedTo\" className=\"form-label\">\r\n              To\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"uploadedTo\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.uploadedTo === '' && inputData.uploadedFrom !== ''\r\n                  ? currentDate\r\n                  : inputData.uploadedTo\r\n              }\r\n              disabled={inputData.uploadedDate}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            <label htmlFor=\"editedDate\" className=\"form-label\">\r\n              Edited Date\r\n            </label>\r\n            <select\r\n              name=\"editedDate\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.editedDate}\r\n            >\r\n              <option value=\"\">Anytime</option>\r\n              <option value=\"10\">Last 10 Days</option>\r\n              <option value=\"20\">Last 20 Days</option>\r\n              <option value=\"30\">Last 30 Days</option>\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"editedFrom\" className=\"form-label\">\r\n              From\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"editedFrom\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.editedTo !== '' && inputData.editedFrom === ''\r\n                  ? inputData.editedTo\r\n                  : inputData.editedFrom\r\n              }\r\n              disabled={inputData.editedDate}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"editedTo\" className=\"form-label\">\r\n              To\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"editedTo\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.editedTo === '' && inputData.editedFrom !== ''\r\n                  ? currentDate\r\n                  : inputData.editedTo\r\n              }\r\n              disabled={inputData.editedDate}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            <label htmlFor=\"shippingDate\" className=\"form-label\">\r\n              Shipping Date\r\n            </label>\r\n            <select\r\n              name=\"shippingDate\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.shippingDate}\r\n            >\r\n              <option value=\"\">Anytime</option>\r\n              <option value=\"10\">Last 10 Days</option>\r\n              <option value=\"20\">Last 20 Days</option>\r\n              <option value=\"30\">Last 30 Days</option>\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"shippingFrom\" className=\"form-label\">\r\n              From\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"shippingFrom\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.shippingTo !== '' && inputData.shippingFrom === ''\r\n                  ? inputData.shippingTo\r\n                  : inputData.shippingFrom\r\n              }\r\n              disabled={inputData.shippingDate}\r\n            />\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"shippingTo\" className=\"form-label\">\r\n              To\r\n            </label>\r\n            <input\r\n              type=\"date\"\r\n              name=\"shippingTo\"\r\n              className=\"is-untouched is-pristine av-valid form-control\"\r\n              onChange={handleChange}\r\n              value={\r\n                inputData.shippingTo === '' && inputData.shippingFrom !== ''\r\n                  ? currentDate\r\n                  : inputData.shippingTo\r\n              }\r\n              disabled={inputData.shippingDate}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col>\r\n            <label htmlFor=\"shipper\" className=\"form-label\">\r\n              Shipper\r\n            </label>\r\n            <select\r\n              name=\"shipper\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.shipper}\r\n            >\r\n              <option value=\"\">All Shippers</option>\r\n              {filters?.shippers?.map(item => (\r\n                <option value={item}>{item}</option>\r\n              ))}\r\n            </select>\r\n          </Col>\r\n          <Col>\r\n            <label htmlFor=\"commodityName\" className=\"form-label\">\r\n              Commodity Name\r\n            </label>\r\n            <select\r\n              name=\"commodityName\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.commodityName}\r\n            >\r\n              <option value=\"\">All Commodities</option>\r\n              {filters?.commodityNames?.map(item => (\r\n                <option value={item}>{item}</option>\r\n              ))}\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col md={6}>\r\n            <label htmlFor=\"crudeClassification\" className=\"form-label\">\r\n              Crude Type\r\n            </label>\r\n            <select\r\n              name=\"crudeClassification\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.crudeClassification}\r\n            >\r\n              <option value=\"\">All Crude Types</option>\r\n              {filters?.crudTypes?.map(item => item !== '' && <option value={item}>{item}</option>)}\r\n            </select>\r\n          </Col>\r\n          <Col md={6}>\r\n            <label htmlFor=\"status\" className=\"form-label\">\r\n              Status\r\n            </label>\r\n            <select\r\n              name=\"status\"\r\n              className=\"is-untouched is-pristine av-valid form-select\"\r\n              onChange={handleChange}\r\n              value={inputData.status}\r\n            >\r\n              <option value=\"\">Status</option>\r\n              <option value=\"Active\">ACTIVE</option>\r\n              <option value=\"Delete\">DELETE</option>\r\n            </select>\r\n          </Col>\r\n        </Row>\r\n        <Row className=\"mt-3\">\r\n          <Col md={5}>\r\n            <Button color=\"danger\" className=\"w-100\" onClick={handleSubmit}>\r\n              Apply\r\n            </Button>\r\n          </Col>\r\n          <Col md={5}>\r\n            <Button\r\n              outline\r\n              color=\"secondary\"\r\n              className=\"w-100 text-semi-bold\"\r\n              onClick={resetFilter}\r\n            >\r\n              Reset\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </div>\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default FilterModal;\r\n","import { Button, Col, Row } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { AvField, AvForm } from 'availity-reactstrap-validation';\r\nimport {\r\n  BOL_NUMBER_REQUIRED,\r\n  COMMODITY_NAME_REQUIRED,\r\n  DENSITY_REQUIRED,\r\n  BSW_REQUIRED,\r\n  SHIPPER_NAME_REQUIRED,\r\n  SHIP_DATE,\r\n  STCC_CODE_REQUIRED,\r\n  UNIT_TRAIN_NUMBER_REQUIRED,\r\n  UNIT_TRAIN_SIZE_REQUIRED,\r\n} from '../../../constants/errorConstants';\r\nimport { addShipmentData } from '../../../store/actions';\r\n\r\nconst AddEditDataForm = props => {\r\n  const { actionType, toggle, data } = props;\r\n  const dispatch = useDispatch();\r\n  const { isLoading } = useSelector(state => state.dashboard);\r\n\r\n  const handleValidSubmit = (event, values) => {\r\n    if (actionType === 'add') dispatch(addShipmentData({ values, toggle }));\r\n    if (actionType === 'edit')\r\n      dispatch(addShipmentData({ values: { ...values, id: data.id }, toggle }));\r\n  };\r\n  const featureIds = useSelector(state => state.auth.Currentuser?.featureIds);\r\n  const FeatureIds = featureIds?.split('~');\r\n\r\n  return (\r\n    <>\r\n      <AvForm\r\n        className=\"needs-validation add-edit-modal pb-2\"\r\n        onValidSubmit={(e, v) => {\r\n          handleValidSubmit(e, v);\r\n        }}\r\n      >\r\n        {actionType === 'view' && (\r\n          <Row>\r\n            <Col md={12}>\r\n              <AvField\r\n                name=\"transactionHash\"\r\n                label=\"Tx Hash\"\r\n                type=\"text\"\r\n                value={data?.transactionHash || 'N.A'}\r\n                className=\"form-control\"\r\n                disabled\r\n              />\r\n            </Col>\r\n          </Row>\r\n        )}\r\n        {actionType === 'add' && (\r\n          <p className=\"disclaimer\">\r\n            <i className=\"fa-solid fa-circle-exclamation\" />\r\n            WARNING: When adding a shipment using an existing <strong>BOL No.</strong>\r\n            all prior shipment values will be overwritten\r\n          </p>\r\n        )}\r\n        <Row className=\"mt-1\">\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"shipDate\"\r\n              label=\"Ship Date *\"\r\n              type=\"date\"\r\n              value={data?.shipDate || ''}\r\n              className=\"form-control\"\r\n              required\r\n              errorMessage={SHIP_DATE}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"shipper\"\r\n              label=\"Shipper Name *\"\r\n              value={data?.shipper || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter shipper name'}\r\n              type=\"text\"\r\n              required\r\n              errorMessage={SHIPPER_NAME_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"unitTrainSize\"\r\n              label=\"Unit Train Size *\"\r\n              value={data?.unitTrainSize || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter Unit Train Size'}\r\n              type=\"number\"\r\n              required\r\n              errorMessage={UNIT_TRAIN_SIZE_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"unitTrainNo\"\r\n              label=\"Unit Train No *\"\r\n              value={data?.unitTrainNo || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter unit train no.'}\r\n              type=\"text\"\r\n              required\r\n              errorMessage={UNIT_TRAIN_NUMBER_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"stccCode\"\r\n              label=\"STCC Code *\"\r\n              value={data?.stccCode || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter STCC code'}\r\n              type=\"number\"\r\n              required\r\n              errorMessage={STCC_CODE_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"dotClass\"\r\n              label=\"Dot Class\"\r\n              value={data?.dotClass || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your dot class'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"unNaNo\"\r\n              label=\"UN NA No.\"\r\n              value={data?.unNaNo || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter UN NA No.'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"bolNo\"\r\n              label=\"BOL No.*\"\r\n              value={data?.bolNo || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter BOL No.'}\r\n              type=\"text\"\r\n              required\r\n              errorMessage={BOL_NUMBER_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view' || actionType === 'edit'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"product\"\r\n              label=\"Product\"\r\n              value={data?.product || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your product'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"hazardWarning\"\r\n              label=\"Hazard Warning\"\r\n              value={data?.hazardWarning || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your hazard warning'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"packingGroup\"\r\n              label=\"Packing Group\"\r\n              value={data?.packingGroup || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your packing group.'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"erpPiu\"\r\n              label=\"E.R.P / P.I.U\"\r\n              value={data?.erpPiu || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your E.R.P/P.I.U'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"commodityName\"\r\n              label=\"Commodity Name *\"\r\n              value={data?.commodityName || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your commodity name.'}\r\n              type=\"text\"\r\n              required\r\n              errorMessage={COMMODITY_NAME_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"bswPerc\"\r\n              label=\"BSW % *\"\r\n              value={data?.bswPerc || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your BSW %'}\r\n              type=\"number\"\r\n              required\r\n              errorMessage={BSW_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"eraflashD93b\"\r\n              label=\"Eraflash D93B\"\r\n              value={data?.eraflashD93b || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your Eraflash D93B.'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"density\"\r\n              label=\"Density *\"\r\n              value={data?.density || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter density'}\r\n              type=\"number\"\r\n              required\r\n              errorMessage={DENSITY_REQUIRED}\r\n              validate={{\r\n                required: { value: true },\r\n              }}\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={6}>\r\n            <AvField\r\n              name=\"crudeClassification\"\r\n              label=\"Crude Type\"\r\n              value={data?.crudeClassification || ''}\r\n              className=\"form-control\"\r\n              placeholder={actionType === 'view' ? 'N.A' : 'Enter your crude type.'}\r\n              type=\"text\"\r\n              disabled={actionType === 'view'}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        {actionType !== 'view' && '*Mandatory fields'}\r\n        {actionType !== 'view' && (\r\n          <Row className=\"mt-3\">\r\n            <Col md={6}>\r\n              {FeatureIds?.includes('FT_ID_12') && (\r\n                <Button type=\"submit\" color=\"danger\" className=\"w-100\">\r\n                  {isLoading && <i className=\"fa-solid fa-circle-notch fa-spin\" />}\r\n                  {!isLoading && (actionType === 'add' ? 'Add Shipment' : 'Save Changes')}\r\n                </Button>\r\n              )}\r\n            </Col>\r\n          </Row>\r\n        )}\r\n      </AvForm>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddEditDataForm;\r\n","import { CustomModal } from '../../../components';\r\nimport AddEditDataForm from './AddEditDataForm';\r\n\r\nconst AddDataModal = props => {\r\n  const { toggleAddData, setToggleAddData } = props;\r\n  return (\r\n    <CustomModal\r\n      title=\"Add Shipment\"\r\n      isOpen={toggleAddData}\r\n      toggle={() => setToggleAddData(prev => !prev)}\r\n      className=\"create-edit-item\"\r\n    >\r\n      <AddEditDataForm actionType=\"add\" toggle={() => setToggleAddData(prev => !prev)} />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default AddDataModal;\r\n","import { CustomModal } from '../../../components';\r\nimport AddEditDataForm from './AddEditDataForm';\r\n\r\nconst EditDataModal = props => {\r\n  const { toggleEditData, setToggleEditData, data } = props;\r\n  return (\r\n    <CustomModal\r\n      title=\"Update Shipment\"\r\n      isOpen={toggleEditData}\r\n      toggle={() => setToggleEditData(prev => !prev)}\r\n      className=\"create-edit-item\"\r\n    >\r\n      <AddEditDataForm\r\n        actionType=\"edit\"\r\n        data={data}\r\n        toggle={() => setToggleEditData(prev => !prev)}\r\n      />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default EditDataModal;\r\n","import { Container } from 'reactstrap';\r\nimport moment from 'moment';\r\n\r\nimport { CustomModal } from '../../../components';\r\nimport AddEditDataForm from './AddEditDataForm';\r\n\r\nconst ViewDataModal = props => {\r\n  const { toggleViewData, setToggleViewData, data, createdDate } = props;\r\n\r\n  const SubHeaderComponent = () => (\r\n    <>\r\n      <Container className=\"sub-header-component\">\r\n        <div className=\"px-4 py-1\">\r\n          <div>\r\n            <i className=\"far fa-clock\" />\r\n            <span className=\"px-2\">\r\n              Uploaded On :{' '}\r\n              <span className=\"text-semi-bold\">\r\n                {/* {moment.utc(data?.createdDate).format('MM/DD/YYYY, HH:mm')} UTC */}\r\n                {moment.utc(createdDate).format('MM/DD/YYYY, HH:mm')} UTC\r\n              </span>\r\n            </span>\r\n            <span className=\"px-2 vertical-align-text-bottom\">|</span>\r\n            <span className=\"px-2\">\r\n              Last Edited :{' '}\r\n              <span className=\"text-semi-bold\">\r\n                {data?.updatedDate ? \r\n                  `${moment.utc(data?.updatedDate).format('MM/DD/YYYY , HH:mm')} UTC`: \"N.A\"}\r\n              </span>\r\n            </span>\r\n          </div>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  );\r\n  return (\r\n    <CustomModal\r\n      title=\"View Shipment\"\r\n      isOpen={toggleViewData}\r\n      SubHeaderComponent={SubHeaderComponent}\r\n      toggle={() => setToggleViewData(prev => !prev)}\r\n      className=\"create-edit-item\"\r\n    >\r\n      <AddEditDataForm\r\n        actionType=\"view\"\r\n        data={data}\r\n        toggle={() => setToggleViewData(prev => !prev)}\r\n      />\r\n    </CustomModal>\r\n  );\r\n};\r\n\r\nexport default ViewDataModal;\r\n","/* eslint-disable no-unused-vars */\r\nimport { useEffect, useState } from 'react';\r\nimport { Button, ButtonGroup, Col, Row, Spinner } from 'reactstrap';\r\nimport { useHistory } from 'react-router-dom';\r\nimport DataTable from 'react-data-table-component';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport Actions from '../../../components/Actions/Actions';\r\nimport { customStyles } from '../../../components/TableStyle/customStyles';\r\nimport FilterModal from './FilterModal';\r\nimport AddDataModal from './AddDataModal';\r\nimport EditDataModal from './EditDataModal';\r\n\r\nimport './dashboard.css';\r\nimport ViewDataModal from './ViewDataModal';\r\nimport ConfirmModal from '../../../components/UI/Modal/ConfirmModal';\r\nimport NotificationAlert from '../../../components/UI/NotificationAlert/NotificationAlert';\r\nimport {\r\n  getShipmentData,\r\n  deleteShipmentData,\r\n  getFilterData,\r\n  getHistoryData,\r\n  setCurrPage,\r\n  setPerPage,\r\n  getUserStart,\r\n} from '../../../store/actions';\r\nimport { ReactComponent as SortIcon } from '../../../assets/images/SortIcon.svg';\r\n\r\nconst Dashboard = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [selectedIdx, setSelectedIdx] = useState(undefined);\r\n  const [toggleEditData, setToggleEditData] = useState(false);\r\n  const [toggleDeleteData, setToggleDeleteData] = useState(false);\r\n  const [toggleAddData, setToggleAddData] = useState(false);\r\n  const [toggleViewData, setToggleViewData] = useState(false);\r\n  const [totalRows, setTotalRows] = useState(0);\r\n  // const [perPage, setPerPage] = useState(10);\r\n  // const [currPage, setCurrPage] = useState(0);\r\n  const [toggleFilterData, setToggleFilterData] = useState(false);\r\n  const { alertData, historyDataObj, currPage, perPage } = useSelector(state => state.dashboard);\r\n  const featureIds = useSelector(state => state.auth.Currentuser?.featureIds);\r\n  const FeatureIds = featureIds?.split('~');\r\n  const [filterData, setFilterData] = useState({\r\n    commodityName: '',\r\n    crudeClassification: '',\r\n    editedDate: '',\r\n    editedFrom: '',\r\n    editedTo: '',\r\n    shipper: '',\r\n    shippingDate: '',\r\n    shippingFrom: '',\r\n    shippingTo: '',\r\n    uploadedDate: '',\r\n    uploadedFrom: '',\r\n    uploadedTo: '',\r\n    status: 'Active',\r\n  });\r\n  const [stopLoading, setStopLoading] = useState(false);\r\n  const [convertedFilterData, setConvertedFilterData] = useState([\r\n    {\r\n      name: 'status',\r\n      value: 'Active',\r\n    },\r\n  ]);\r\n  const [filterDisplayData, setFilterDisplayData] = useState([]);\r\n  const [sortKey, setSortKey] = useState({\r\n    attibName: 'createdDate',\r\n    sortType: 'desc',\r\n  });\r\n\r\n  const [searchInput, setSearchInput] = useState(undefined);\r\n  const [resetTablePage, setResetTablePage] = useState(false);\r\n  const [toggleEditConfirm, setToggleEditConfirm] = useState(false);\r\n\r\n  const [data, setData] = useState({\r\n    columns: [\r\n      {\r\n        name: 'No.',\r\n        selector: row => row.srn,\r\n        width: '5%',\r\n      },\r\n      {\r\n        id: 'shipper',\r\n        name: 'Shipper',\r\n        selector: row => row.shipper,\r\n        width: '20%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'shipDate',\r\n        name: 'Ship Date',\r\n        selector: row => row.shipDate,\r\n        width: '13.33%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'unitTrainNo',\r\n        name: 'Unit Train No',\r\n        selector: row => row.unitTrainNo,\r\n        width: '12%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'bolNo',\r\n        name: 'BOL No.',\r\n        selector: row => row.bolNo,\r\n        width: '11%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'commodityName',\r\n        name: 'Commodity',\r\n        selector: row => row.commodityName,\r\n        width: '15.33%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        id: 'crudeClassification',\r\n        name: 'Crude Type',\r\n        selector: row => (row.crudeClassification ? row.crudeClassification : 'N.A'),\r\n        width: '10.33%',\r\n        sortServer: true,\r\n        sortable: true,\r\n      },\r\n      {\r\n        name: 'Actions',\r\n        selector: row => row.actions,\r\n        width: '13%',\r\n      },\r\n    ],\r\n    rows: [],\r\n  });\r\n\r\n  const { isLoading, shipmentData, successMsg, errorMsg } = useSelector(state => state.dashboard);\r\n\r\n  const getData = page => {\r\n    dispatch(\r\n      getShipmentData({\r\n        pageNumber: page,\r\n        perPage,\r\n        filters: [{ ...searchInput }, ...convertedFilterData],\r\n        sortKey: { ...sortKey },\r\n      }),\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData(currPage);\r\n    if (!Object.keys(sortKey).length) {\r\n      setStopLoading(false);\r\n    }\r\n    setResetTablePage(!resetTablePage);\r\n    if (convertedFilterData) {\r\n      setFilterDisplayData([\r\n        ...convertedFilterData.filter(\r\n          (value, index, self) => index === self.findIndex(t => t.name === value.name),\r\n        ),\r\n      ]);\r\n    }\r\n  }, [convertedFilterData, successMsg, sortKey, perPage]);\r\n\r\n  useEffect(() => {\r\n    const searchTimeout = setTimeout(() => {\r\n      if (searchInput) {\r\n        getData(0);\r\n        dispatch(setCurrPage(0));\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearTimeout(searchTimeout);\r\n  }, [searchInput]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getFilterData());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (historyDataObj && shipmentData?.searchResult[selectedIdx]) {\r\n      setToggleViewData(prev => !prev);\r\n    }\r\n  }, [historyDataObj]);\r\n\r\n  const actionProps = {\r\n    view: idx => {\r\n      setSelectedIdx(idx);\r\n      dispatch(getHistoryData(shipmentData?.searchResult[idx].bolNo));\r\n      // setToggleViewData(prev => !prev);\r\n    },\r\n    edit: idx => {\r\n      setSelectedIdx(idx);\r\n      setToggleEditConfirm(prev => !prev);\r\n    },\r\n    del: idx => {\r\n      setSelectedIdx(idx);\r\n      setToggleDeleteData(prev => !prev);\r\n    },\r\n    history: item => history.push(`/data-history/${item.bolNo}`),\r\n  };\r\n\r\n  const updateTableData = () => {\r\n    setData({\r\n      ...data,\r\n      rows: shipmentData?.searchResult?.map((item, idx) => ({\r\n        ...item,\r\n        srn: idx + 1 + currPage * perPage,\r\n        shipDate: moment(item.shipDate).format('MM/DD/YYYY'),\r\n        actions: <Actions featureIds={FeatureIds} {...actionProps} idx={idx} item={item} />,\r\n      })),\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (errorMsg) {\r\n      setStopLoading(true);\r\n    }\r\n  }, [errorMsg]);\r\n\r\n  useEffect(() => {\r\n    updateTableData();\r\n    if (shipmentData?.searchResult) {\r\n      setStopLoading(true);\r\n    }\r\n    setTotalRows(shipmentData?.totalCount);\r\n  }, [shipmentData]);\r\n\r\n  const handlePageChange = page => {\r\n    dispatch(setCurrPage(page - 1));\r\n    getData(page - 1);\r\n  };\r\n\r\n  const handlePerRowsChange = async newPerPage => {\r\n    dispatch(setPerPage(newPerPage));\r\n  };\r\n\r\n  const handleDeleteData = () => {\r\n    const selectedData = shipmentData?.searchResult[selectedIdx];\r\n    const values = {\r\n      id: selectedData.id,\r\n      bolNumber: selectedData.bolNo,\r\n      ledgerUuid: selectedData.ledgerUuid,\r\n    };\r\n    dispatch(deleteShipmentData({ values, getData, setToggleDeleteData }));\r\n  };\r\n\r\n  const resetFilterValues = () => {\r\n    setFilterData({\r\n      commodityName: '',\r\n      crudeClassification: '',\r\n      editedDate: '',\r\n      editedFrom: '',\r\n      editedTo: '',\r\n      shipper: '',\r\n      shippingDate: '',\r\n      shippingFrom: '',\r\n      shippingTo: '',\r\n      uploadedDate: '',\r\n      uploadedFrom: '',\r\n      uploadedTo: '',\r\n      status: 'Active',\r\n    });\r\n    setConvertedFilterData([\r\n      {\r\n        name: 'status',\r\n        value: 'Active',\r\n      },\r\n    ]);\r\n    // setToggleFilterData(false);\r\n  };\r\n  const nameConverter = name => {\r\n    const result = name.replace(/([A-Z])/g, ' $1');\r\n    return result.charAt(0).toUpperCase() + result.slice(1);\r\n  };\r\n\r\n  const handleSearch = e => {\r\n    setSearchInput({\r\n      name: 'keyword',\r\n      value: e.target.value,\r\n    });\r\n  };\r\n\r\n  const handleEditConfirm = () => {\r\n    setToggleEditConfirm(false);\r\n    setToggleEditData(prev => !prev);\r\n  };\r\n  return (\r\n    <>\r\n      <Row>\r\n        <h4 className=\"text-bold\">Total Available Shipments: {!totalRows ? 0 : totalRows}</h4>\r\n      </Row>\r\n      {/* {isLoading && <Spinner className=\"spinner\" type=\"border\" color=\"dark\" />} */}\r\n      <Row className=\"mt-4\">\r\n        <Col xs={6}>\r\n          {FeatureIds?.includes('FT_ID_9') && (\r\n            <Button color=\"danger\" onClick={() => setToggleFilterData(true)} className=\"filter-btn\">\r\n              <i className=\"fas fa-filter\" /> <span className=\"mx-1\">Filter</span>\r\n            </Button>\r\n          )}\r\n          {filterDisplayData?.map(({ name, value }) => (\r\n            <Button\r\n              className=\"filter_btn\"\r\n              onClick={() => {\r\n                setConvertedFilterData(\r\n                  convertedFilterData.filter(item => item.name !== name && name),\r\n                );\r\n                setFilterData({\r\n                  ...filterData,\r\n                  [name]: '',\r\n                  ...(name === 'updatedDate' && {\r\n                    uploadedDate: '',\r\n                    uploadedFrom: '',\r\n                    uploadedTo: '',\r\n                    editedDate: '',\r\n                    editedFrom: '',\r\n                    editedTo: '',\r\n                  }),\r\n                  ...(name === 'shipDate' && {\r\n                    shippingDate: '',\r\n                    shippingFrom: '',\r\n                    shippingTo: '',\r\n                  }),\r\n                });\r\n              }}\r\n            >\r\n              <span>\r\n                {name === 'updatedDate' || name === 'shipDate'\r\n                  ? nameConverter(name)\r\n                  : value.length > 15\r\n                  ? `${value?.substring(0, 15)}...`\r\n                  : value}\r\n              </span>\r\n              <i className=\"fa-solid fa-xmark\" />\r\n            </Button>\r\n          ))}\r\n        </Col>\r\n        <Col xs={6} className=\"text-end btn-search-section mb-1\">\r\n          {FeatureIds?.includes('FT_ID_9') && (\r\n            <ButtonGroup className=\"add-btn mx-3\" onClick={() => setToggleAddData(true)}>\r\n              <Button outline>\r\n                <i className=\"far fa-plus f-24\" />\r\n              </Button>\r\n              <Button outline className=\"text-semi-bold\">\r\n                Add Shipment\r\n              </Button>\r\n            </ButtonGroup>\r\n          )}\r\n          <div className=\"form-group has-search\">\r\n            <span className=\"fa fa-search form-control-feedback\" />\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              placeholder=\"Search for Shipper / Unit Train no / BOL No. here...\"\r\n              onChange={handleSearch}\r\n            />\r\n          </div>\r\n        </Col>\r\n      </Row>\r\n      <Row className=\"mt-4\">\r\n        <Col sm={12} className=\"position-relative list-data-table\">\r\n          {(isLoading || !stopLoading) && (\r\n            <Spinner className=\"spinner\" type=\"border\" color=\"dark\" />\r\n          )}\r\n          {!data.rows && stopLoading ? (\r\n            <p className=\"no_content\">No result found</p>\r\n          ) : (\r\n            <DataTable\r\n              columns={data.columns}\r\n              data={data.rows}\r\n              customStyles={customStyles}\r\n              pagination\r\n              paginationServer\r\n              paginationRowsPerPageOptions={[10, 25, 50, 100]}\r\n              paginationTotalRows={totalRows}\r\n              onChangePage={handlePageChange}\r\n              onChangeRowsPerPage={handlePerRowsChange}\r\n              noDataComponent={!isLoading && stopLoading && 'No data found'}\r\n              sortIcon={<SortIcon />}\r\n              sortServer\r\n              onSort={(selectedColumn, sortDirection) => {\r\n                setSortKey({\r\n                  attibName: selectedColumn.id,\r\n                  sortType: sortDirection,\r\n                });\r\n              }}\r\n              paginationDefaultPage={currPage + 1}\r\n              paginationResetDefaultPage={resetTablePage}\r\n              paginationPerPage={perPage}\r\n            />\r\n          )}\r\n        </Col>\r\n      </Row>\r\n      <FilterModal\r\n        isOpen={toggleFilterData}\r\n        toggle={setToggleFilterData}\r\n        setFilterData={setFilterData}\r\n        resetFilterValues={resetFilterValues}\r\n        filterData={filterData}\r\n        setConvertedFilterData={setConvertedFilterData}\r\n      />\r\n      <AddDataModal toggleAddData={toggleAddData} setToggleAddData={setToggleAddData} />\r\n      <EditDataModal\r\n        toggleEditData={toggleEditData}\r\n        setToggleEditData={setToggleEditData}\r\n        data={shipmentData?.searchResult[selectedIdx]}\r\n      />\r\n      <ViewDataModal\r\n        toggleViewData={toggleViewData}\r\n        setToggleViewData={setToggleViewData}\r\n        data={shipmentData?.searchResult[selectedIdx]}\r\n        createdDate={historyDataObj && historyDataObj[historyDataObj.length - 1]?.createdAt}\r\n      />\r\n      <ConfirmModal\r\n        title=\"Delete Shipment\"\r\n        question=\"Are you sure you want to delete the shipment data?\"\r\n        isOpen={toggleDeleteData}\r\n        toggle={() => setToggleDeleteData(prev => !prev)}\r\n        handleSubmit={handleDeleteData}\r\n      />\r\n      <ConfirmModal\r\n        title=\"Update Confirmation\"\r\n        question=\"Any edit will update the existing record. Do you still want to continue?\"\r\n        isOpen={toggleEditConfirm}\r\n        toggle={() => setToggleEditConfirm(prev => !prev)}\r\n        handleSubmit={handleEditConfirm}\r\n      />\r\n      {alertData?.isOpen && (\r\n        <NotificationAlert delay=\"5000\" type={alertData?.type} message={alertData?.message} />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"sourceRoot":""}